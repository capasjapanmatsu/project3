// „Éá„Éº„Çø„Éô„Éº„Çπ„Ç´„É©„É†Á¢∫Ë™çÁî®„ÉÜ„Çπ„Éà„Çπ„ÇØ„É™„Éó„Éà
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå SupabaseÁí∞Â¢ÉÂ§âÊï∞„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function checkMicrochipColumn() {
  console.log('üîç dogs„ÉÜ„Éº„Éñ„É´„ÅÆ„Çπ„Ç≠„Éº„Éû„ÇíÁ¢∫Ë™ç‰∏≠...');
  
  // „Åæ„Åö„ÄÅdogs„ÉÜ„Éº„Éñ„É´„ÅÆÊßãÈÄ†„ÇíÁ¢∫Ë™ç
  const { data: tableInfo, error: schemaError } = await supabase
    .from('dogs')
    .select('*')
    .limit(1);
  
  if (schemaError) {
    console.error('‚ùå „Çπ„Ç≠„Éº„ÉûÁ¢∫Ë™ç„Ç®„É©„Éº:', schemaError);
    return;
  }
  
  console.log('‚úÖ dogs„ÉÜ„Éº„Éñ„É´„Å∏„ÅÆ„Ç¢„ÇØ„Çª„ÇπÊàêÂäü');
  
  if (tableInfo && tableInfo.length > 0) {
    const columns = Object.keys(tableInfo[0]);
    console.log('üìã Âà©Áî®ÂèØËÉΩ„Å™„Ç´„É©„É†:', columns);
    
    if (columns.includes('microchip_number')) {
      console.log('‚úÖ microchip_number„Ç´„É©„É†„ÅåÂ≠òÂú®„Åó„Åæ„ÅôÔºÅ');
    } else {
      console.log('‚ùå microchip_number„Ç´„É©„É†„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
      console.log('üîß ‰ª•‰∏ã„ÅÆSQL„ÇíÊâãÂãï„ÅßSupabase„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÅßÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ:');
      console.log('   ALTER TABLE dogs ADD COLUMN microchip_number TEXT;');
    }
  } else {
    console.log('üìù dogs„ÉÜ„Éº„Éñ„É´„Å´„Éá„Éº„Çø„Åå„ÅÇ„Çä„Åæ„Åõ„Çì');
  }
}

checkMicrochipColumn()
  .then(() => {
    console.log('üèÅ „ÉÅ„Çß„ÉÉ„ÇØÂÆå‰∫Ü');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå „Ç®„É©„Éº:', error);
    process.exit(1);
  });
