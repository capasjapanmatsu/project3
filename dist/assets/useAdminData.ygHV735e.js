var e=(e,r,a)=>new Promise((t,i)=>{var n=e=>{try{d(a.next(e))}catch(r){i(r)}},o=e=>{try{d(a.throw(e))}catch(r){i(r)}},d=e=>e.done?t(e.value):Promise.resolve(e.value).then(n,o);d((a=a.apply(e,r)).next())});import{r}from"./vendor.CKEClKZl.js";import{s as a,l as t,E as i,k as n}from"./index.Drgpoyph.js";const o=o=>{const[d,s]=r.useState([]),[c,l]=r.useState([]),[_,u]=r.useState(!0),[g,f]=r.useState(""),[p,m]=r.useState(""),v=()=>e(void 0,null,function*(){try{t("info","🔍 Fetching pending vaccines..."),yield e(void 0,null,function*(){try{const{error:e}=yield a.storage.updateBucket("vaccine-certs",{public:!0});return!e}catch(g){return!1}});const r=yield n(()=>a.from("vaccine_certifications").select("\n            id,\n            dog_id,\n            rabies_vaccine_image,\n            combo_vaccine_image,\n            rabies_expiry_date,\n            combo_expiry_date,\n            status,\n            created_at,\n            dog:dogs (\n              id,\n              name,\n              breed,\n              gender,\n              birth_date,\n              owner:profiles (\n                id,\n                name\n              )\n            )\n          ").eq("status","pending").order("created_at",{ascending:!1}));if(r.error)throw t("error","❌ Vaccines fetch error:",r.error),r.error;const i=r.data||[];if(0===i.length)return t("info","ℹ️ No pending vaccines found"),void l([]);t("info",`✅ Found ${i.length} pending vaccines`);const o=i.map(e=>{const r=Array.isArray(e.dog)?e.dog[0]:e.dog,a=r?Array.isArray(r.owner)?r.owner[0]:r.owner:null;return r&&a?{id:e.id,dog_id:e.dog_id,rabies_vaccine_image:e.rabies_vaccine_image,combo_vaccine_image:e.combo_vaccine_image,rabies_expiry_date:e.rabies_expiry_date,combo_expiry_date:e.combo_expiry_date,status:e.status,created_at:e.created_at,dog:{id:r.id,name:r.name,breed:r.breed,gender:r.gender,birth_date:r.birth_date,owner:{id:a.id,name:a.name}}}:(t("warn","❌ Invalid vaccine data:",{vaccine:e}),null)}).filter(e=>null!==e);l(o)}catch(r){t("error","❌ Error fetching vaccines:",{error:i(r)}),f(`ワクチン証明書データの取得に失敗しました: ${i(r)}`)}}),h=()=>e(void 0,null,function*(){try{u(!0),f(""),"parks"===o?yield e(void 0,null,function*(){try{t("info","🔍 Fetching pending parks...");const e=yield n(()=>a.from("dog_parks").select("\n            id,\n            name,\n            address,\n            status,\n            created_at,\n            owner_id\n          ").in("status",["pending","first_stage_passed","second_stage_waiting","second_stage_review","smart_lock_testing"]).order("created_at",{ascending:!1}));if(e.error)throw t("error","❌ Parks fetch error:",e.error),e.error;const r=e.data||[];if(0===r.length)return t("info","ℹ️ No pending parks found"),void s([]);t("info",`✅ Found ${r.length} pending parks`);const i=[...new Set(r.map(e=>e.owner_id))],o=r.map(e=>e.id),[d,c,l,_]=yield Promise.allSettled([i.length>0?a.from("profiles").select("id, name, postal_code, address, phone_number, email").in("id",i):Promise.resolve({data:[],error:null}),o.length>0?a.from("dog_park_review_stages").select("park_id, second_stage_submitted_at").in("park_id",o):Promise.resolve({data:[],error:null}),o.length>0?a.from("dog_park_facility_images").select("park_id, is_approved").in("park_id",o):Promise.resolve({data:[],error:null}),i.length>0?a.from("owner_verifications").select("user_id, verification_id, status, verification_data, created_at").in("user_id",i):Promise.resolve({data:[],error:null})]),u="fulfilled"===d.status&&d.value.data||[],g=new Map(u.map(e=>[e.id,e])),f="fulfilled"===c.status&&c.value.data||[],p=new Map(f.map(e=>[e.park_id,e])),m="fulfilled"===l.status&&l.value.data||[],v=new Map;m.forEach(e=>{v.has(e.park_id)||v.set(e.park_id,[]),v.get(e.park_id).push(e)});const h="fulfilled"===_.status&&_.value.data||[],y=new Map(h.map(e=>[e.user_id,e])),w=r.map(e=>{const r=g.get(e.owner_id),a=p.get(e.id),t=v.get(e.id)||[],i=y.get(e.owner_id),n=t.length,o=t.filter(e=>!0===e.is_approved).length,d=t.filter(e=>!1===e.is_approved).length,s=t.filter(e=>null===e.is_approved).length;let c="",l="";return i&&i.verification_data&&"object"==typeof i.verification_data&&(c=i.verification_data.document_url||i.verification_data.file_path||"",l=i.verification_data.file_name||i.verification_data.filename||""),!c&&(null==i?void 0:i.verification_id)&&(c=i.verification_id),!l&&c&&(l=c.split("/").pop()||"identity_document"),{id:e.id,name:e.name,address:e.address,status:e.status,created_at:e.created_at,owner_id:e.owner_id,owner_name:(null==r?void 0:r.name)||"Unknown Owner",second_stage_submitted_at:(null==a?void 0:a.second_stage_submitted_at)||null,total_images:n,approved_images:o,rejected_images:d,pending_images:s,owner_postal_code:(null==r?void 0:r.postal_code)||"",owner_address:(null==r?void 0:r.address)||"",owner_phone_number:(null==r?void 0:r.phone_number)||"",owner_email:(null==r?void 0:r.email)||"",identity_document_url:c,identity_document_filename:l,identity_status:(null==i?void 0:i.status)||"not_submitted",identity_created_at:(null==i?void 0:i.created_at)||""}});t("info",`✅ Transformed ${w.length} parks with image data`),s(w)}catch(e){t("error","❌ Error fetching parks:",{error:i(e)}),f(`ドッグラン申請データの取得に失敗しました: ${i(e)}`)}}):"vaccines"===o&&(yield v())}catch(r){t("error","❌ Error in fetchData:",{error:i(r)}),f(`データの取得に失敗しました: ${i(r)}`)}finally{u(!1)}});return r.useEffect(()=>{h()},[o]),{pendingParks:d,pendingVaccines:c,isLoading:_,error:g,success:p,refetch:h}},d=o=>{const[d,s]=r.useState([]),[c,l]=r.useState(!1),[_,u]=r.useState(""),g=r=>e(void 0,null,function*(){try{l(!0),u(""),t("info",`🔍 Fetching images for park: ${r}`);const e=yield n(()=>a.from("dog_park_facility_images").select("*").eq("park_id",r).order("created_at",{ascending:!1}));if(e.error)throw t("error","❌ Images fetch error:",e.error),e.error;const i=e.data||[];t("info",`✅ Found ${i.length} images for park ${r}`),s(i)}catch(e){t("error","❌ Error fetching park images:",{error:i(e)}),u(`画像データの取得に失敗しました: ${i(e)}`)}finally{l(!1)}});return r.useEffect(()=>{o&&g(o)},[o]),{parkImages:d,isLoading:c,error:_,fetchParkImages:g}};export{o as a,d as u};
