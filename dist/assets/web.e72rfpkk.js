var t=(t,e,i)=>new Promise((r,n)=>{var o=t=>{try{s(i.next(t))}catch(e){n(e)}},a=t=>{try{s(i.throw(t))}catch(e){n(e)}},s=t=>t.done?r(t.value):Promise.resolve(t.value).then(o,a);s((i=i.apply(t,e)).next())});import{WebPlugin as e}from"./index.Dem8ssYk.js";import{ImpactStyle as i,NotificationType as r}from"./index.CRwSwfDH.js";import"./supabase.X3H3st79.js";import"./vendor.CKEClKZl.js";class n extends e{constructor(){super(...arguments),this.selectionStarted=!1}impact(e){return t(this,null,function*(){const t=this.patternForImpact(null==e?void 0:e.style);this.vibrateWithPattern(t)})}notification(e){return t(this,null,function*(){const t=this.patternForNotification(null==e?void 0:e.type);this.vibrateWithPattern(t)})}vibrate(e){return t(this,null,function*(){const t=(null==e?void 0:e.duration)||300;this.vibrateWithPattern([t])})}selectionStart(){return t(this,null,function*(){this.selectionStarted=!0})}selectionChanged(){return t(this,null,function*(){this.selectionStarted&&this.vibrateWithPattern([70])})}selectionEnd(){return t(this,null,function*(){this.selectionStarted=!1})}patternForImpact(t=i.Heavy){return t===i.Medium?[43]:t===i.Light?[20]:[61]}patternForNotification(t=r.Success){return t===r.Warning?[30,40,30,50,60]:t===r.Error?[27,45,50]:[35,65,21]}vibrateWithPattern(t){if(!navigator.vibrate)throw this.unavailable("Browser does not support the vibrate API");navigator.vibrate(t)}}export{n as HapticsWeb};
