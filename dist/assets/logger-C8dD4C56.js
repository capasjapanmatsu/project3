var i=Object.defineProperty;var c=(n,o,e)=>o in n?i(n,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[o]=e;var l=(n,o,e)=>c(n,typeof o!="symbol"?o+"":o,e);class t{constructor(){l(this,"isDevelopment",!1);l(this,"isDebugEnabled",this.isDevelopment)}debug(o,...e){this.isDebugEnabled&&console.debug(`🐛 [DEBUG] ${o}`,...e)}info(o,...e){(this.isDevelopment||this.isDebugEnabled)&&console.info(`ℹ️ [INFO] ${o}`,...e)}warn(o,...e){console.warn(`⚠️ [WARN] ${o}`,...e)}error(o,...e){console.error(`❌ [ERROR] ${o}`,...e)}}const d=new t,a=()=>{{const n=()=>{};console.log=n,console.debug=n,console.info=n;const o=console.warn,e=console.error;console.warn=(...s)=>{const r=s[0]?.toString()||"";(r.includes("React")||r.includes("Warning")||r.includes("Error"))&&o(...s)},console.error=(...s)=>{e(...s)}}};a();export{d as l};
