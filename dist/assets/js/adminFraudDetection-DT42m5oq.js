import{s as e}from"./index-Bf2s4vfe.js";async function t(){try{const{data:r,error:i}=await e.from("information_schema.tables").select("table_name").eq("table_schema","public").in("table_name",["fraud_detection_logs","user_device_fingerprints","stripe_card_fingerprints"]);if(i)return[];const s=r?.map(e=>e.table_name)||[];if(!s.includes("fraud_detection_logs")||!s.includes("user_device_fingerprints")||!s.includes("stripe_card_fingerprints"))return[];const{data:a,error:n}=await e.from("profiles").select("id, name, email, created_at, user_type");if(n)return[];if(!a||0===a.length)return[];const{data:c,error:d}=await e.from("fraud_detection_logs").select("user_id, detection_type, risk_score, action_taken, created_at").order("created_at",{ascending:!1});if(d)return[];const o=[];for(const _ of a){const r=c?.filter(e=>e.user_id===_.id)||[];if(0===r.length)continue;const i=Math.max(...r.map(e=>e.risk_score)),s=i>=70?"high":i>=50?"medium":"low";if("low"===s)continue;const a=Array.from(new Set(r.map(e=>e.detection_type))),n=r[0]?.created_at||"";let d=0;try{const{data:t}=await e.from("user_device_fingerprints").select("fingerprint").eq("user_id",_.id);if(t&&t.length>0){const{count:r}=await e.from("user_device_fingerprints").select("user_id",{count:"exact"}).in("fingerprint",t.map(e=>e.fingerprint)).neq("user_id",_.id);d=r||0}}catch(t){}let l=0;try{const{data:t}=await e.from("user_device_fingerprints").select("ip_address").eq("user_id",_.id).not("ip_address","is",null);if(t&&t.length>0){const{count:r}=await e.from("user_device_fingerprints").select("user_id",{count:"exact"}).in("ip_address",t.map(e=>e.ip_address)).neq("user_id",_.id);l=r||0}}catch(t){}let u=0;try{const{data:t}=await e.from("stripe_card_fingerprints").select("card_fingerprint").eq("user_id",_.id);if(t&&t.length>0){const{count:r}=await e.from("stripe_card_fingerprints").select("user_id",{count:"exact"}).in("card_fingerprint",t.map(e=>e.card_fingerprint)).neq("user_id",_.id);u=r||0}}catch(t){}let p=!1;try{const{data:t}=await e.from("stripe_card_fingerprints").select("trial_used").eq("user_id",_.id).eq("trial_used",!0);p=(t?.length||0)>1}catch(t){}let f=_.email||"";try{const{data:t}=await e.auth.admin.getUserById(_.id);t.user?.email&&(f=t.user.email)}catch(t){}o.push({userId:_.id,userName:_.name||"Unknown",email:f,riskScore:i,riskLevel:s,detectionTypes:a,deviceDuplicates:d,ipDuplicates:l,cardDuplicates:u,lastDetection:n,trialAbuse:p,createdAt:_?.created_at||""})}return o.sort((e,t)=>t.riskScore-e.riskScore)}catch(t){return[]}}async function r(t){try{const{data:r,error:i}=await e.from("user_device_fingerprints").select("fingerprint, ip_address, user_agent, action_type, created_at").eq("user_id",t).order("created_at",{ascending:!1});if(i)throw i;const{data:s,error:a}=await e.from("fraud_detection_logs").select("detection_type, risk_score, details, action_taken, created_at").eq("user_id",t).order("created_at",{ascending:!1});if(a)throw a;const{data:n,error:c}=await e.from("stripe_card_fingerprints").select("card_fingerprint, trial_used, trial_used_at, created_at").eq("user_id",t).order("created_at",{ascending:!1});if(c)throw c;const d=r?.map(e=>e.fingerprint)||[];let o=[];if(d.length>0){const{data:r,error:i}=await e.from("user_device_fingerprints").select("user_id").in("fingerprint",d).neq("user_id",t);!i&&r&&(o=[...new Set(r.map(e=>e.user_id))])}const _=[...new Set(r?.map(e=>e.ip_address).filter(Boolean)||[])];let l=[];if(_.length>0){const{data:r,error:i}=await e.from("user_device_fingerprints").select("user_id").in("ip_address",_).neq("user_id",t);!i&&r&&(l=[...new Set(r.map(e=>e.user_id))])}return{userId:t,deviceFingerprints:r||[],fraudLogs:s||[],cardUsage:n||[],duplicateDeviceUsers:o,duplicateIpUsers:l}}catch(r){return null}}async function i(){try{const{data:t,error:r}=await e.from("information_schema.tables").select("table_name").eq("table_schema","public").in("table_name",["fraud_detection_logs","user_device_fingerprints","stripe_card_fingerprints"]);if(r)return null;if(!(t?.map(e=>e.table_name)||[]).includes("fraud_detection_logs"))return null;const i=new Date(Date.now()-2592e6).toISOString(),{data:s,error:a}=await e.from("fraud_detection_logs").select("user_id, risk_score, detection_type, created_at").order("created_at",{ascending:!1});if(a)return{totalHighRiskUsers:0,totalMediumRiskUsers:0,totalLowRiskUsers:0,recentDetections:0,blockedAttempts:0,trialAbuseCount:0};if(!s||0===s.length)return{totalHighRiskUsers:0,totalMediumRiskUsers:0,totalLowRiskUsers:0,recentDetections:0,blockedAttempts:0,trialAbuseCount:0};const n=new Map;s.forEach(e=>{const t=n.get(e.user_id)||0;e.risk_score>t&&n.set(e.user_id,e.risk_score)});let c=0,d=0,o=0;n.forEach(e=>{e>=70?c++:e>=50?d++:o++});const _=s.filter(e=>new Date(e.created_at)>=new Date(i)).length,l=s.filter(e=>"duplicate_device"===e.detection_type||"duplicate_ip"===e.detection_type||"duplicate_card"===e.detection_type).length,u=s.filter(e=>"subscription_abuse"===e.detection_type||"duplicate_card"===e.detection_type&&e.risk_score>=60).length;return{totalHighRiskUsers:c,totalMediumRiskUsers:d,totalLowRiskUsers:o,recentDetections:_,blockedAttempts:l,trialAbuseCount:u}}catch(t){return{totalHighRiskUsers:0,totalMediumRiskUsers:0,totalLowRiskUsers:0,recentDetections:0,blockedAttempts:0,trialAbuseCount:0}}}export{i as a,r as b,t as g};
