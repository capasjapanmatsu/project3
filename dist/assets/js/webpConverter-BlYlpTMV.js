import{s as r}from"./index-DcAUXhuw.js";async function t(t,a,e,i={}){try{const{error:l}=await r.storage.from(t).upload(e,a,{upsert:!0});if(l)throw new Error(`ファイルのアップロードに失敗しました: ${l.message}`);let s;try{const a=await r.functions.invoke("convert-to-webp",{body:{bucket:t,path:e,quality:i.quality??80,generateThumbnail:i.generateThumbnail??!0,thumbnailSize:i.thumbnailSize??300,keepOriginal:i.keepOriginal??!1}});if(a.error)throw a.error;s=a.data}catch(n){try{const r=await fetch("/.netlify/functions/convert-to-webp-proxy",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({bucket:t,path:e,quality:i.quality??80,generateThumbnail:i.generateThumbnail??!0,thumbnailSize:i.thumbnailSize??300,keepOriginal:i.keepOriginal??!1})});if(!r.ok)throw new Error(await r.text());s=await r.json()}catch(o){const{data:a}=r.storage.from(t).getPublicUrl(e);return{success:!0,originalUrl:a.publicUrl,originalPath:e}}}if(!s.success){const{data:a}=r.storage.from(t).getPublicUrl(e);return{success:!0,originalUrl:a.publicUrl,originalPath:e}}return{success:!0,webpUrl:s.webpUrl,thumbnailUrl:s.thumbnailUrl,originalUrl:s.originalUrl,webpPath:s.webpPath,thumbnailPath:s.thumbnailPath,originalPath:s.originalPath}}catch(l){try{const{data:a}=r.storage.from(t).getPublicUrl(e);return{success:!0,originalUrl:a.publicUrl,originalPath:e}}catch(s){return{success:!1,error:l instanceof Error?l.message:"画像の変換に失敗しました"}}}}export{t as u};
