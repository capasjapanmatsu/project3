import{r as o}from"./react-vendor-Co5xHYdE.js";import{s as l,l as a,E as g,k as F}from"./index-fyCrE4_U.js";const K=async()=>{try{const{error:n}=await l.storage.updateBucket("vaccine-certs",{public:!0});return n?(console.warn("Failed to make vaccine-certs bucket public:",n),!1):!0}catch(n){return console.warn("Error updating bucket settings:",n),!1}},Y=n=>{const[I,v]=o.useState([]),[D,p]=o.useState([]),[E,w]=o.useState(!0),[b,_]=o.useState(""),[d,$]=o.useState(""),j=async()=>{try{a("info","🔍 Fetching pending parks...");const r=await F(()=>l.from("dog_parks").select(`
            id,
            name,
            address,
            status,
            created_at,
            owner_id
          `).in("status",["pending","first_stage_passed","second_stage_waiting","second_stage_review","smart_lock_testing"]).order("created_at",{ascending:!1}));if(r.error)throw a("error","❌ Parks fetch error:",r.error),r.error;const c=r.data||[];if(c.length===0){a("info","ℹ️ No pending parks found"),v([]);return}a("info",`✅ Found ${c.length} pending parks`);const u=[...new Set(c.map(e=>e.owner_id))],t=c.map(e=>e.id),[s,f,V,A]=await Promise.allSettled([u.length>0?l.from("profiles").select("id, name, postal_code, address, phone_number, email").in("id",u):Promise.resolve({data:[],error:null}),t.length>0?l.from("dog_park_review_stages").select("park_id, second_stage_submitted_at").in("park_id",t):Promise.resolve({data:[],error:null}),t.length>0?l.from("dog_park_facility_images").select("park_id, is_approved").in("park_id",t):Promise.resolve({data:[],error:null}),u.length>0?l.from("owner_verifications").select("user_id, verification_id, status, verification_data, created_at").in("user_id",u):Promise.resolve({data:[],error:null})]),x=s.status==="fulfilled"?s.value.data||[]:[],L=new Map(x.map(e=>[e.id,e]));console.log("🔍 取得した申請者情報:",{ownersDataLength:x.length,ownersData:x,ownersMap:L});const B=f.status==="fulfilled"?f.value.data||[]:[],N=new Map(B.map(e=>[e.park_id,e])),U=V.status==="fulfilled"?V.value.data||[]:[],k=new Map;U.forEach(e=>{k.has(e.park_id)||k.set(e.park_id,[]),k.get(e.park_id).push(e)});const O=A.status==="fulfilled"?A.value.data||[]:[],Q=new Map(O.map(e=>[e.user_id,e])),R=c.map(e=>{const h=L.get(e.owner_id),z=N.get(e.id),S=k.get(e.id)||[],i=Q.get(e.owner_id),C=S.length,G=S.filter(y=>y.is_approved===!0).length,H=S.filter(y=>y.is_approved===!1).length,J=S.filter(y=>y.is_approved===null).length;let m="",P="";return i&&i.verification_data&&typeof i.verification_data=="object"&&(m=i.verification_data.document_url||i.verification_data.file_path||"",P=i.verification_data.file_name||i.verification_data.filename||""),!m&&i?.verification_id&&(m=i.verification_id),!P&&m&&(P=m.split("/").pop()||"identity_document"),{id:e.id,name:e.name,address:e.address,status:e.status,created_at:e.created_at,owner_id:e.owner_id,owner_name:h?.name||"Unknown Owner",second_stage_submitted_at:z?.second_stage_submitted_at||null,total_images:C,approved_images:G,rejected_images:H,pending_images:J,owner_postal_code:h?.postal_code||"",owner_address:h?.address||"",owner_phone_number:h?.phone_number||"",owner_email:h?.email||"",identity_document_url:m,identity_document_filename:P,identity_status:i?.status||"not_submitted",identity_created_at:i?.created_at||""}});a("info",`✅ Transformed ${R.length} parks with image data`),v(R)}catch(r){a("error","❌ Error fetching parks:",{error:g(r)}),_(`ドッグラン申請データの取得に失敗しました: ${g(r)}`)}},q=async()=>{try{a("info","🔍 Fetching pending vaccines..."),await K();const r=await F(()=>l.from("vaccine_certifications").select(`
            id,
            dog_id,
            rabies_vaccine_image,
            combo_vaccine_image,
            rabies_expiry_date,
            combo_expiry_date,
            status,
            created_at,
            dog:dogs (
              id,
              name,
              breed,
              gender,
              birth_date,
              owner:profiles (
                id,
                name
              )
            )
          `).eq("status","pending").order("created_at",{ascending:!1}));if(r.error)throw a("error","❌ Vaccines fetch error:",r.error),r.error;const c=r.data||[];if(c.length===0){a("info","ℹ️ No pending vaccines found"),p([]);return}a("info",`✅ Found ${c.length} pending vaccines`);const u=c.map(t=>{const s=Array.isArray(t.dog)?t.dog[0]:t.dog,f=s?Array.isArray(s.owner)?s.owner[0]:s.owner:null;return!s||!f?(a("warn","❌ Invalid vaccine data:",{vaccine:t}),null):{id:t.id,dog_id:t.dog_id,rabies_vaccine_image:t.rabies_vaccine_image,combo_vaccine_image:t.combo_vaccine_image,rabies_expiry_date:t.rabies_expiry_date,combo_expiry_date:t.combo_expiry_date,status:t.status,created_at:t.created_at,dog:{id:s.id,name:s.name,breed:s.breed,gender:s.gender,birth_date:s.birth_date,owner:{id:f.id,name:f.name}}}}).filter(t=>t!==null);p(u)}catch(r){a("error","❌ Error fetching vaccines:",{error:g(r)}),_(`ワクチン証明書データの取得に失敗しました: ${g(r)}`)}},M=async()=>{try{w(!0),_(""),n==="parks"?await j():n==="vaccines"&&await q()}catch(r){a("error","❌ Error in fetchData:",{error:g(r)}),_(`データの取得に失敗しました: ${g(r)}`)}finally{w(!1)}};return o.useEffect(()=>{M()},[n]),{pendingParks:I,pendingVaccines:D,isLoading:E,error:b,success:d,refetch:M}},Z=n=>{const[I,v]=o.useState([]),[D,p]=o.useState(!1),[E,w]=o.useState(""),b=async _=>{try{p(!0),w(""),a("info",`🔍 Fetching images for park: ${_}`);const d=await F(()=>l.from("dog_park_facility_images").select("*").eq("park_id",_).order("created_at",{ascending:!1}));if(d.error)throw a("error","❌ Images fetch error:",d.error),d.error;const $=d.data||[];a("info",`✅ Found ${$.length} images for park ${_}`),v($)}catch(d){a("error","❌ Error fetching park images:",{error:g(d)}),w(`画像データの取得に失敗しました: ${g(d)}`)}finally{p(!1)}};return o.useEffect(()=>{n&&b(n)},[n]),{parkImages:I,isLoading:D,error:E,fetchParkImages:b}};export{Y as a,Z as u};
