import { AlertTriangle, BarChart4, Camera, CheckCircle, ChevronRight, Clock, DollarSign, Edit, Eye, FileText, MapPin, PlusCircle, RefreshCw, Shield, Star, Trash2, TrendingUp, Users } from 'lucide-react';
import { useEffect, useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import Button from '../components/Button';
import Card from '../components/Card';
import useAuth from '../context/AuthContext';
import type { DogPark } from '../types';
import { supabase } from '../utils/supabase';

export function OwnerDashboard() {
  const { user } = useAuth();
  const navigate = useNavigate();
  const [parks, setParks] = useState<DogPark[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [isRefreshing, setIsRefreshing] = useState(false);
  const [totalRevenue, setTotalRevenue] = useState(0);
  const [totalReservations, setTotalReservations] = useState(0);
  const [totalUsers, setTotalUsers] = useState(0);
  const [showConfirmDelete, setShowConfirmDelete] = useState<string | null>(null);
  const [isDeleting, setIsDeleting] = useState(false);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');
  const [showDebugInfo, setShowDebugInfo] = useState(false);
  const [confirmDelete, setConfirmDelete] = useState(false);

  // „Éá„Éº„ÇøÂèñÂæóÈñ¢Êï∞„ÇíÂàÜÈõ¢
  const fetchParks = async () => {
    try {
      console.log('Fetching parks for user:', user?.id);
      const { data, error } = await supabase
        .from('dog_parks')
        .select('*')
        .eq('owner_id', user?.id)
        .order('created_at', { ascending: false });

      if (error) {
        console.error('Error fetching parks:', error);
        throw error;
      }

      console.log('Fetched parks:', data);
      setParks(data || []);

      // ‰ªÆ„ÅÆ„Éá„Éº„Çø„ÇíË®≠ÂÆöÔºàÂÆüÈöõ„ÅÆÂÆüË£Ö„Åß„ÅØ„Éá„Éº„Çø„Éô„Éº„Çπ„Åã„ÇâÂèñÂæóÔºâ
      setTotalRevenue(25600);
      setTotalReservations(32);
      setTotalUsers(128);
    } catch (error) {
      console.error('Error fetching dog parks:', error);
      setError('„Éâ„ÉÉ„Ç∞„É©„É≥„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü');
    }
  };

  // ÊâãÂãï„É™„Éï„É¨„ÉÉ„Ç∑„É•Ê©üËÉΩ
  const handleRefresh = async () => {
    setIsRefreshing(true);
    setError('');
    setSuccess('');

    try {
      await fetchParks();
      setSuccess('„Éá„Éº„Çø„ÇíÊõ¥Êñ∞„Åó„Åæ„Åó„Åü');
      setTimeout(() => setSuccess(''), 3000);
    } catch (error) {
      setError('„Éá„Éº„Çø„ÅÆÊõ¥Êñ∞„Å´Â§±Êïó„Åó„Åæ„Åó„Åü');
      setTimeout(() => setError(''), 3000);
    } finally {
      setIsRefreshing(false);
    }
  };

  useEffect(() => {
    console.log('üöÄ OwnerDashboardÂàùÊúüÂåñÈñãÂßã');

    if (!user) {
      console.log('‚ùå „É¶„Éº„Ç∂„Éº„ÅåÊú™Ë™çË®º„ÄÅ„É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Å´ÁßªÂãï');
      navigate('/login');
      return;
    }

    console.log('‚úÖ „É¶„Éº„Ç∂„ÉºË™çË®ºÊ∏à„Åø:', user.id);

    const loadData = async () => {
      try {
        console.log('üì° „Éá„Éº„ÇøÂèñÂæóÈñãÂßã');
        setIsLoading(true);
        setError('');

        await fetchParks();

        console.log('‚úÖ „Éá„Éº„ÇøÂèñÂæóÂÆå‰∫Ü');
      } catch (error) {
        console.error('‚ùå ÂàùÊúü„Éá„Éº„ÇøÂèñÂæó„Ç®„É©„Éº:', error);
        setError('„Éá„Éº„Çø„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ');
      } finally {
        setIsLoading(false);
      }
    };

    loadData();

    // Supabase„É™„Ç¢„É´„Çø„Ç§„É†Ê©üËÉΩ„ÇíËøΩÂä†
    const subscription = supabase
      .channel('dog_parks_changes')
      .on('postgres_changes',
        {
          event: '*',
          schema: 'public',
          table: 'dog_parks',
          filter: `owner_id=eq.${user.id}`
        },
        (payload) => {
          console.log('Park data changed:', payload);
          // „Éá„Éº„Çø„ÅåÂ§âÊõ¥„Åï„Çå„Åü„Çâ„É™„Éï„É¨„ÉÉ„Ç∑„É•
          fetchParks();
        }
      )
      .subscribe();

    // „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
    return () => {
      subscription.unsubscribe();
    };
  }, [user, navigate]);

  const getStatusInfo = (status: string) => {
    switch (status) {
      case 'pending':
        return {
          icon: Clock,
          label: 'Á¨¨‰∏ÄÂØ©Êüª‰∏≠',
          description: 'Áî≥Ë´ãÂÜÖÂÆπ„ÇíÂØ©Êüª‰∏≠„Åß„Åô„ÄÇ„Åó„Å∞„Çâ„Åè„ÅäÂæÖ„Å°„Åè„Å†„Åï„ÅÑ„ÄÇ',
          color: 'bg-yellow-100 text-yellow-800'
        };
      case 'first_stage_passed':
        return {
          icon: CheckCircle,
          label: 'Á¨¨‰∏ÄÂØ©ÊüªÈÄöÈÅéÔºàÊóßÔºâ',
          description: 'Á¨¨‰∏ÄÂØ©Êüª„ÇíÈÄöÈÅé„Åó„Åæ„Åó„Åü„ÄÇÔºàÊóß„Ç∑„Çπ„ÉÜ„É†Ôºâ',
          color: 'bg-blue-100 text-blue-800'
        };
      case 'second_stage_waiting':
        return {
          icon: AlertTriangle,
          label: '‰∫åÊ¨°ÂØ©ÊüªÁî≥„ÅóËæº„Åø',
          description: 'Á¨¨‰∏ÄÂØ©ÊüªÈÄöÈÅéÔºÅ„Çπ„Éû„Éº„Éà„É≠„ÉÉ„ÇØ„ÇíË≥ºÂÖ•„Åó„ÄÅÁ¨¨‰∫åÂØ©Êüª„ÇíÊèêÂá∫„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
          color: 'bg-orange-100 text-orange-800',
          showSmartLockPurchase: true
        };
      case 'second_stage_review':
        return {
          icon: FileText,
          label: 'Á¨¨‰∫åÂØ©Êüª‰∏≠',
          description: 'Á¨¨‰∫åÂØ©Êüª„ÇíÂÆüÊñΩ‰∏≠„Åß„Åô„ÄÇÂØ©ÊüªÁµêÊûú„Çí„ÅäÂæÖ„Å°„Åè„Å†„Åï„ÅÑ„ÄÇ',
          color: 'bg-purple-100 text-purple-800'
        };
      case 'smart_lock_testing':
        return {
          icon: Shield,
          label: '„Çπ„Éû„Éº„Éà„É≠„ÉÉ„ÇØË™çË®ºÂæÖ„Å°',
          description: '„Çπ„Éû„Éº„Éà„É≠„ÉÉ„ÇØ„ÅÆÂãï‰ΩúÁ¢∫Ë™ç„ÇíË°å„Å£„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
          color: 'bg-indigo-100 text-indigo-800'
        };
      case 'approved':
        return {
          icon: CheckCircle,
          label: 'ÊâøË™çÊ∏à„Åø„ÉªÂÖ¨ÈñãÂèØËÉΩ',
          description: '„Éâ„ÉÉ„Ç∞„É©„É≥„ÅÆÈÅãÂñ∂„ÇíÈñãÂßã„Åß„Åç„Åæ„ÅôÔºÅ',
          color: 'bg-green-100 text-green-800'
        };
      case 'rejected':
        return {
          icon: AlertTriangle,
          label: 'Âç¥‰∏ã',
          description: 'Áî≥Ë´ã„ÅåÂç¥‰∏ã„Åï„Çå„Åæ„Åó„Åü„ÄÇË©≥Á¥∞„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ',
          color: 'bg-red-100 text-red-800'
        };
      default:
        return {
          icon: Clock,
          label: '‰∏çÊòé',
          description: '„Çπ„ÉÜ„Éº„Çø„Çπ„Åå‰∏çÊòé„Åß„Åô„ÄÇ',
          color: 'bg-gray-100 text-gray-800'
        };
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'pending': return 'bg-yellow-100 text-yellow-800';
      case 'first_stage_passed': return 'bg-blue-100 text-blue-800';
      case 'second_stage_waiting': return 'bg-orange-100 text-orange-800';
      case 'second_stage_review': return 'bg-purple-100 text-purple-800';
      case 'smart_lock_testing': return 'bg-indigo-100 text-indigo-800';
      case 'approved': return 'bg-green-100 text-green-800';
      case 'rejected': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const handleDeletePark = async (parkId: string) => {
    try {
      console.log('üóëÔ∏è Starting park deletion for:', parkId);
      setIsDeleting(true);
      setError('');

      // First, check if there are any related facility images
      console.log('üì∑ Checking for facility images...');
      const { data: facilityImages } = await supabase
        .from('dog_park_facility_images')
        .select('id')
        .eq('park_id', parkId);

      console.log('üì∑ Found facility images:', facilityImages?.length || 0);

      // If there are facility images, delete them first
      if (facilityImages && facilityImages.length > 0) {
        console.log('üóëÔ∏è Deleting facility images...');
        const { error: deleteImagesError } = await supabase
          .from('dog_park_facility_images')
          .delete()
          .eq('park_id', parkId);

        if (deleteImagesError) {
          console.error('‚ùå Error deleting facility images:', deleteImagesError);
          throw new Error('ÊñΩË®≠ÁîªÂÉè„ÅÆÂâäÈô§„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ');
        }
        console.log('‚úÖ Facility images deleted successfully');
      }

      // Check for review stages
      console.log('üìã Checking for review stages...');
      const { data: reviewStages } = await supabase
        .from('dog_park_review_stages')
        .select('id')
        .eq('park_id', parkId);

      console.log('üìã Found review stages:', reviewStages?.length || 0);

      // Delete review stages if they exist
      if (reviewStages && reviewStages.length > 0) {
        console.log('üóëÔ∏è Deleting review stages...');
        const { error: deleteStagesError } = await supabase
          .from('dog_park_review_stages')
          .delete()
          .eq('park_id', parkId);

        if (deleteStagesError) {
          console.error('‚ùå Error deleting review stages:', deleteStagesError);
          throw new Error('ÂØ©Êüª„Çπ„ÉÜ„Éº„Ç∏„ÅÆÂâäÈô§„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ');
        }
        console.log('‚úÖ Review stages deleted successfully');
      }

      // Now delete the park
      console.log('üèûÔ∏è Deleting park...');
      const { error } = await supabase
        .from('dog_parks')
        .delete()
        .eq('id', parkId)
        .eq('owner_id', user?.id); // Ensure the user owns the park

      if (error) {
        console.error('‚ùå Error deleting park:', error);
        throw error;
      }
      console.log('‚úÖ Park deleted successfully');

      // Update the parks list by refetching
      await fetchParks();
      setShowConfirmDelete(null);
      setConfirmDelete(false);

      // Get park name for success message
      const deletedPark = parks.find(p => p.id === parkId);
      const parkName = deletedPark?.name || '„Éâ„ÉÉ„Ç∞„É©„É≥';
      setSuccess(`${parkName}„ÅÆÁî≥Ë´ã„ÇíÂÆåÂÖ®„Å´ÂâäÈô§„Åó„Åæ„Åó„Åü„ÄÇÂÜçÂ∫¶„ÅîÂà©Áî®„ÅÆÈöõ„ÅØÊñ∞Ë¶èÁî≥Ë´ã„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ`);

      console.log('üéâ Park deletion completed successfully for:', parkName);

      // Clear success message after 5 seconds (longer for important message)
      setTimeout(() => {
        setSuccess('');
      }, 5000);

    } catch (err) {
      console.error('‚ùå Park deletion failed:', err);
      setError((err as Error).message || '„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü');

      // Clear error message after 3 seconds
      setTimeout(() => {
        setError('');
      }, 3000);
    } finally {
      console.log('üîÑ Setting isDeleting to false');
      setIsDeleting(false);
    }
  };

  if (isLoading) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600" />
      </div>
    );
  }

  if (!user) {
    setError('„É¶„Éº„Ç∂„ÉºÊÉÖÂ†±„ÅåÂèñÂæó„Åß„Åç„Åæ„Åõ„Çì');
    return;
  }

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-2xl font-bold">„Ç™„Éº„Éä„Éº„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ</h1>
          <p className="text-gray-600">„Éâ„ÉÉ„Ç∞„É©„É≥„ÅÆÁôªÈå≤„ÉªÁÆ°ÁêÜ„ÇíË°å„ÅÑ„Åæ„Åô</p>
        </div>
        <div className="flex space-x-3">
          <Button
            variant="secondary"
            onClick={handleRefresh}
            isLoading={isRefreshing}
            className="flex items-center"
          >
            <RefreshCw className="w-4 h-4 mr-2" />
            Êõ¥Êñ∞
          </Button>
          <Link to="/owner-payment-system">
            <Button variant="secondary" className="flex items-center">
              <DollarSign className="w-4 h-4 mr-2" />
              ÂèéÁõä„Ç∑„Çπ„ÉÜ„É†
            </Button>
          </Link>
          <Link to="/register-park">
            <Button>
              <PlusCircle className="w-4 h-4 mr-2" />
              „Éâ„ÉÉ„Ç∞„É©„É≥„ÇíÁôªÈå≤
            </Button>
          </Link>
        </div>
      </div>

      {/* „Ç®„É©„Éº„ÉªÊàêÂäü„É°„ÉÉ„Çª„Éº„Ç∏ */}
      {error && (
        <div className="bg-red-100 border border-red-300 text-red-800 rounded-lg p-4 flex items-start">
          <AlertTriangle className="w-5 h-5 text-red-600 mt-0.5 mr-3 flex-shrink-0" />
          <p>{error}</p>
        </div>
      )}

      {success && (
        <div className="bg-green-100 border border-green-300 text-green-800 rounded-lg p-4 flex items-start">
          <CheckCircle className="w-5 h-5 text-green-600 mt-0.5 mr-3 flex-shrink-0" />
          <p>{success}</p>
        </div>
      )}

      {/* „Éá„Éê„ÉÉ„Ç∞ÊÉÖÂ†± */}
      <div className="bg-gray-100 border border-gray-300 rounded-lg p-4">
        <div className="flex items-center justify-between mb-2">
          <h3 className="text-sm font-semibold text-gray-700">„Éá„Éê„ÉÉ„Ç∞ÊÉÖÂ†±</h3>
          <Button
            variant="secondary"
            size="sm"
            onClick={() => setShowDebugInfo(!showDebugInfo)}
          >
            {showDebugInfo ? 'Èö†„Åô' : 'Ë°®Á§∫'}
          </Button>
        </div>

        {showDebugInfo && (
          <div className="space-y-2">
            <div className="text-sm">
              <strong>„É¶„Éº„Ç∂„ÉºID:</strong> {user?.id}
            </div>
            <div className="text-sm">
              <strong>„Éë„Éº„ÇØÊï∞:</strong> {parks.length}
            </div>
            <div className="text-sm">
              <strong>ÊúÄÁµÇÊõ¥Êñ∞:</strong> {new Date().toLocaleString()}
            </div>
            {parks.map(park => (
              <div key={park.id} className="bg-white p-3 rounded border text-sm">
                <div><strong>ÂêçÂâç:</strong> {park.name}</div>
                <div><strong>ID:</strong> {park.id}</div>
                <div><strong>„Çπ„ÉÜ„Éº„Çø„Çπ:</strong> {park.status}</div>
                <div><strong>‰ΩúÊàêÊó•:</strong> {new Date(park.created_at).toLocaleString()}</div>
                <div><strong>Êõ¥Êñ∞Êó•:</strong> {park.updated_at ? new Date(park.updated_at).toLocaleString() : '„Å™„Åó'}</div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* Áµ±Ë®à„Ç´„Éº„Éâ */}
      {parks.some(park => park.status === 'approved') && (
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">‰ªäÊúà„ÅÆÂèéÁõä</p>
                <p className="text-2xl font-bold text-green-600">¬•{totalRevenue.toLocaleString()}</p>
                <p className="text-xs text-green-600">ÂâçÊúàÊØî +8%</p>
              </div>
              <DollarSign className="w-8 h-8 text-green-600" />
            </div>
            <div className="mt-3 text-blue-600 text-sm flex items-center">
              <Link to="/owner-payment-system" className="flex items-center">
                <span>Ë©≥Á¥∞„ÇíË¶ã„Çã</span>
                <ChevronRight className="w-4 h-4 ml-1" />
              </Link>
            </div>
          </Card>

          <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">‰ªäÊúà„ÅÆ‰∫àÁ¥Ñ</p>
                <p className="text-2xl font-bold text-blue-600">{totalReservations}‰ª∂</p>
                <p className="text-xs text-blue-600">ÂâçÊúàÊØî +12%</p>
              </div>
              <Calendar className="w-8 h-8 text-blue-600" />
            </div>
            <div className="mt-3 text-blue-600 text-sm flex items-center">
              <span>Ë©≥Á¥∞„ÇíË¶ã„Çã</span>
              <ChevronRight className="w-4 h-4 ml-1" />
            </div>
          </Card>

          <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Âà©Áî®ËÄÖÊï∞</p>
                <p className="text-2xl font-bold text-purple-600">{totalUsers}‰∫∫</p>
                <p className="text-xs text-purple-600">ÂâçÊúàÊØî +15%</p>
              </div>
              <Users className="w-8 h-8 text-purple-600" />
            </div>
            <div className="mt-3 text-blue-600 text-sm flex items-center">
              <span>Ë©≥Á¥∞„ÇíË¶ã„Çã</span>
              <ChevronRight className="w-4 h-4 ml-1" />
            </div>
          </Card>
        </div>
      )}

      {/* ÂèéÁõäÊ¶ÇË¶Å„Ç´„Éº„Éâ */}
      <Card className="bg-gradient-to-r from-blue-500 to-purple-500 text-white">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <div className="bg-white/20 p-3 rounded-full">
              <BarChart4 className="w-8 h-8" />
            </div>
            <div>
              <h2 className="text-xl font-bold mb-1">ÂèéÁõä„Ç∑„Çπ„ÉÜ„É†</h2>
              <p className="text-sm opacity-90">
                Â£≤‰∏ä„ÅÆ80%„Åå„Ç™„Éº„Éä„ÉºÊßò„Å´ÊîØÊâï„Çè„Çå„Åæ„Åô
              </p>
            </div>
          </div>
          <Link to="/owner-payment-system">
            <Button className="bg-white text-gray-900 hover:bg-gray-100 hover:text-gray-900 font-bold">
              <TrendingUp className="w-4 h-4 mr-2" />
              Ë©≥Á¥∞„ÇíË¶ã„Çã
            </Button>
          </Link>
        </div>
      </Card>

      {/* ÂØ©Êüª„Éó„É≠„Çª„Çπ„ÅÆË™¨Êòé */}
      <Card className="bg-blue-50 border-blue-200">
        <div className="flex items-start space-x-3">
          <FileText className="w-6 h-6 text-blue-600 mt-1" />
          <div>
            <h3 className="font-semibold text-blue-900 mb-2">ÂØ©Êüª„Éó„É≠„Çª„Çπ</h3>
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4 text-sm text-blue-800">
              <div className="flex items-center space-x-2">
                <div className="w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-xs font-bold">1</div>
                <span>Á¨¨‰∏ÄÂØ©ÊüªÔºàÂü∫Êú¨Êù°‰ª∂Á¢∫Ë™çÔºâ</span>
              </div>
              <div className="flex items-center space-x-2">
                <div className="w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-xs font-bold">2</div>
                <span>Á¨¨‰∫åÂØ©ÊüªÔºàÊõ∏È°ûÂØ©ÊüªÔºâ</span>
              </div>
              <div className="flex items-center space-x-2">
                <div className="w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-xs font-bold">3</div>
                <span>QR„Ç≥„Éº„ÉâÂÆüË®ºÊ§úÊüª</span>
              </div>
              <div className="flex items-center space-x-2">
                <div className="w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-xs font-bold">4</div>
                <span>Êé≤Ëºâ„ÉªÈÅãÂñ∂ÈñãÂßã</span>
              </div>
            </div>
          </div>
        </div>
      </Card>

      {parks.length === 0 ? (
        <Card className="text-center py-12">
          <MapPin className="w-12 h-12 text-gray-400 mx-auto mb-4" />
          <h2 className="text-xl font-semibold text-gray-700 mb-2">„Åæ„Å†„Éâ„ÉÉ„Ç∞„É©„É≥„ÅåÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì</h2>
          <p className="text-gray-600 mb-6">Êñ∞„Åó„ÅÑ„Éâ„ÉÉ„Ç∞„É©„É≥„ÇíÁôªÈå≤„Åó„Å¶„ÄÅÂ§ö„Åè„ÅÆÊÑõÁä¨ÂÆ∂„Å´Âà©Áî®„Åó„Å¶„ÇÇ„Çâ„ÅÑ„Åæ„Åó„Çá„ÅÜ</p>
          <Link to="/register-park">
            <Button>
              <PlusCircle className="w-4 h-4 mr-2" />
              „Éâ„ÉÉ„Ç∞„É©„É≥„ÇíÁôªÈå≤„Åô„Çã
            </Button>
          </Link>
        </Card>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {parks.map((park) => {
            const statusInfo = getStatusInfo(park.status);
            const StatusIcon = statusInfo.icon;

            return (
              <Card key={park.id} className="hover:shadow-lg transition-shadow">
                <div className="flex justify-between items-start mb-4">
                  <div className="flex-1">
                    <h3 className="text-xl font-semibold mb-2">{park.name}</h3>
                    <div className="flex items-center space-x-2 mb-2">
                      <span className={`px-3 py-1 rounded-full text-sm font-medium flex items-center space-x-1 ${statusInfo.color}`}>
                        <StatusIcon className="w-4 h-4" />
                        <span>{statusInfo.label}</span>
                      </span>
                    </div>
                    <p className="text-sm text-gray-600 mb-3">{statusInfo.description}</p>
                  </div>
                </div>

                <p className="text-gray-600 mb-4 line-clamp-2">{park.description}</p>

                <div className="space-y-2 mb-4">
                  <div className="flex items-center text-gray-600">
                    <MapPin className="w-4 h-4 mr-2" />
                    <span className="text-sm">{park.address}</span>
                  </div>
                  <div className="flex items-center text-gray-600">
                    <Clock className="w-4 h-4 mr-2" />
                    <span className="text-sm">24ÊôÇÈñìÂñ∂Ê•≠</span>
                  </div>
                  <div className="grid grid-cols-2 gap-4 text-sm text-gray-600">
                    <div>ÂèéÂÆπ‰∫∫Êï∞: {park.max_capacity}‰∫∫</div>
                    <div>ÁèæÂú®„ÅÆÂà©Áî®ËÄÖ: {park.current_occupancy}‰∫∫</div>
                  </div>
                </div>

                {/* ÈÅãÂñ∂‰∏≠„ÅÆÂ†¥Âêà„ÅÆÁµ±Ë®àÊÉÖÂ†± */}
                {park.status === 'approved' && (
                  <div className="bg-green-50 p-3 rounded-lg mb-4">
                    <div className="grid grid-cols-2 gap-4 text-sm">
                      <div className="flex items-center space-x-2">
                        <Star className="w-4 h-4 text-yellow-500" />
                        <span>Ë©ï‰æ°: ‚òÖ{park.average_rating.toFixed(1)}</span>
                      </div>
                      <div>
                        <span>„É¨„Éì„É•„Éº: {park.review_count}‰ª∂</span>
                      </div>
                      <div>
                        <span>ÁèæÂú®„ÅÆÂà©Áî®ËÄÖ: {park.current_occupancy}‰∫∫</span>
                      </div>
                      <div>
                        <span>Âà©Áî®Áéá: {Math.round((park.current_occupancy / park.max_capacity) * 100)}%</span>
                      </div>
                    </div>
                  </div>
                )}

                {/* „Çπ„ÉÜ„Éº„Çø„ÇπÂà•„ÅÆÊ°àÂÜÖ */}
                {park.status === 'pending' && (
                  <div className="bg-yellow-50 p-3 rounded-lg mb-4">
                    <div className="flex items-start space-x-2">
                      <AlertTriangle className="w-5 h-5 text-yellow-600 mt-0.5 flex-shrink-0" />
                      <div className="text-sm text-yellow-800">
                        <p className="font-medium mb-1">Á¨¨‰∏ÄÂØ©ÊüªÂæÖ„Å°</p>
                        <p>ÁÆ°ÁêÜËÄÖ„Å´„Çà„ÇãÂØ©Êüª„Çí„ÅäÂæÖ„Å°„Åè„Å†„Åï„ÅÑ„ÄÇÈÄöÂ∏∏3-5Âñ∂Ê•≠Êó•„ÅßÁµêÊûú„Çí„ÅäÁü•„Çâ„Åõ„Åó„Åæ„Åô„ÄÇ</p>
                      </div>
                    </div>
                  </div>
                )}

                {park.status === 'second_stage_waiting' && (
                  <div className="bg-orange-50 border border-orange-200 p-4 rounded-lg mb-4">
                    <div className="flex items-start space-x-3">
                      <Shield className="w-6 h-6 text-orange-600 mt-0.5 flex-shrink-0" />
                      <div className="flex-1">
                        <div className="text-sm text-orange-800">
                          <p className="font-bold mb-2 text-base">üéâ Á¨¨‰∏ÄÂØ©ÊüªÈÄöÈÅé„Åä„ÇÅ„Åß„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„ÅôÔºÅ</p>
                          <p className="mb-3">‰∫åÊ¨°ÂØ©Êüª„ÅÆÁî≥„ÅóËæº„Åø„ÅåÂèØËÉΩ„Å´„Å™„Çä„Åæ„Åó„Åü„ÄÇ</p>

                          {/* Áî≥„ÅóËæº„Åø„Éú„Çø„É≥„ÇíÁõÆÁ´ã„Å§„Çà„ÅÜ„Å´ÈÖçÁΩÆ */}
                          <div className="mb-4 text-center">
                            <Link to={`/parks/${park.id}/second-stage`}>
                              <Button className="bg-orange-600 hover:bg-orange-700 text-white px-6 py-2 rounded-lg font-medium">
                                <FileText className="w-4 h-4 mr-2" />
                                ‰∫åÊ¨°ÂØ©ÊüªÁî≥„ÅóËæº„Åø
                              </Button>
                            </Link>
                          </div>

                          {/* „Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº */}
                          <div className="mb-4 p-3 bg-white rounded-lg border border-orange-200">
                            <div className="flex items-center justify-between text-xs text-orange-700 mb-2">
                              <span>ÈÄ≤ÊçóÁä∂Ê≥Å</span>
                              <span>1/3„Çπ„ÉÜ„ÉÉ„ÉóÂÆå‰∫Ü</span>
                            </div>
                            <div className="w-full bg-orange-200 rounded-full h-2">
                              <div className="bg-orange-600 h-2 rounded-full" style={{ width: '33%' }}></div>
                            </div>
                          </div>

                          <p className="mb-3">Ê¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó„Å´ÈÄ≤„ÇÄ„Åü„ÇÅ„ÄÅ‰ª•‰∏ã„ÅÆÊâãÈ†Ü„ÇíÂÆå‰∫Ü„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö</p>
                          <div className="space-y-3 mb-4">
                            <div className="flex items-start space-x-3 p-2 bg-green-50 rounded-lg border border-green-200">
                              <div className="w-6 h-6 bg-green-600 text-white rounded-full flex items-center justify-center text-xs font-bold flex-shrink-0">‚úì</div>
                              <div className="flex-1">
                                <span className="font-semibold text-green-800">Á¨¨‰∏ÄÂØ©ÊüªÈÄöÈÅé</span>
                                <p className="text-xs text-green-700 mt-1">Âü∫Êú¨ÊÉÖÂ†±„ÅÆÂØ©Êüª„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü</p>
                              </div>
                            </div>
                            <div className="flex items-start space-x-3 p-2 bg-orange-50 rounded-lg border-2 border-orange-300">
                              <div className="w-6 h-6 bg-orange-600 text-white rounded-full flex items-center justify-center text-xs font-bold flex-shrink-0">2</div>
                              <div className="flex-1">
                                <span className="font-semibold text-orange-800">„Çπ„Éû„Éº„Éà„É≠„ÉÉ„ÇØ„ÅÆË≥ºÂÖ•„ÉªË®≠ÁΩÆ</span>
                                <p className="text-xs text-orange-700 mt-1">„Éö„ÉÉ„Éà„Ç∑„Éß„ÉÉ„Éó„Åß„Çπ„Éû„Éº„Éà„É≠„ÉÉ„ÇØ„ÇíË≥ºÂÖ•„Åó„ÄÅË®≠ÁΩÆ„Åó„Å¶„Åè„Å†„Åï„ÅÑ</p>
                              </div>
                            </div>
                            <div className="flex items-start space-x-3 p-2 bg-gray-50 rounded-lg border border-gray-200">
                              <div className="w-6 h-6 bg-gray-400 text-white rounded-full flex items-center justify-center text-xs font-bold flex-shrink-0">3</div>
                              <div className="flex-1">
                                <span className="font-semibold text-gray-600">Á¨¨‰∫åÂØ©ÊüªÔºàË®≠ÂÇôÁîªÂÉèÔºâ„ÅÆÊèêÂá∫</span>
                                <p className="text-xs text-gray-500 mt-1">Ë®≠ÁΩÆÂÆå‰∫ÜÂæå„ÄÅË®≠ÂÇôÁîªÂÉè„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Å¶„Åè„Å†„Åï„ÅÑ</p>
                              </div>
                            </div>
                          </div>
                          <div className="flex space-x-2">
                            <Link to="/pet-shop" className="flex-1">
                              <Button className="w-full bg-orange-600 hover:bg-orange-700">
                                <DollarSign className="w-4 h-4 mr-2" />
                                „Éö„ÉÉ„Éà„Ç∑„Éß„ÉÉ„Éó„Åß„Çπ„Éû„Éº„Éà„É≠„ÉÉ„ÇØË≥ºÂÖ•
                              </Button>
                            </Link>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                )}

                {park.status === 'first_stage_passed' && (
                  <div className="bg-blue-50 p-3 rounded-lg mb-4">
                    <div className="flex items-start space-x-2">
                      <CheckCircle className="w-5 h-5 text-blue-600 mt-0.5 flex-shrink-0" />
                      <div className="text-sm text-blue-800">
                        <p className="font-medium mb-1">Á¨¨‰∏ÄÂØ©ÊüªÈÄöÈÅéÔºÅÔºàÊóß„Ç∑„Çπ„ÉÜ„É†Ôºâ</p>
                        <p>Á¨¨‰∫åÂØ©Êüª„ÅÆË©≥Á¥∞ÊÉÖÂ†±„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</p>
                      </div>
                    </div>
                  </div>
                )}

                {park.status === 'second_stage_review' && (
                  <div className="bg-purple-50 p-3 rounded-lg mb-4">
                    <div className="flex items-start space-x-2">
                      <Clock className="w-5 h-5 text-purple-600 mt-0.5 flex-shrink-0" />
                      <div className="text-sm text-purple-800">
                        <p className="font-medium mb-1">Á¨¨‰∫åÂØ©Êüª‰∏≠</p>
                        <p>ÊèêÂá∫„ÅÑ„Åü„Å†„ÅÑ„ÅüË®≠ÂÇôÁîªÂÉè„ÇíÂØ©Êüª‰∏≠„Åß„Åô„ÄÇÁµêÊûú„Çí„ÅäÂæÖ„Å°„Åè„Å†„Åï„ÅÑ„ÄÇ</p>
                      </div>
                    </div>
                  </div>
                )}

                {park.status === 'smart_lock_testing' && (
                  <div className="bg-indigo-50 p-3 rounded-lg mb-4">
                    <div className="flex items-start space-x-2">
                      <Shield className="w-5 h-5 text-indigo-600 mt-0.5 flex-shrink-0" />
                      <div className="text-sm text-indigo-800">
                        <p className="font-medium mb-1">„Çπ„Éû„Éº„Éà„É≠„ÉÉ„ÇØÂãï‰ΩúÁ¢∫Ë™ç</p>
                        <p>„Çπ„Éû„Éº„Éà„É≠„ÉÉ„ÇØ„ÅÆÂãï‰ΩúÁ¢∫Ë™ç„ÇíË°å„ÅÑ„ÄÅÊ≠£Â∏∏„Å´‰ΩúÂãï„Åô„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</p>
                      </div>
                    </div>
                  </div>
                )}

                {/* „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ */}
                <div className="flex space-x-2">
                  {park.status === 'qr_testing_ready' && (
                    <div className="flex justify-between w-full space-x-2">
                      <Link to={`/parks/${park.id}/publish-setup`} className="flex-1">
                        <Button size="sm" className="w-full bg-green-600 hover:bg-green-700">
                          <Shield className="w-4 h-4 mr-1" />
                          ÂÖ¨ÈñãÊ∫ñÂÇô„ÇíÈñãÂßã
                        </Button>
                      </Link>
                      <Button
                        size="sm"
                        variant="secondary"
                        className="text-red-600 hover:text-red-700 hover:bg-red-50"
                        onClick={(e) => {
                          e.preventDefault();
                          e.stopPropagation();
                          setShowConfirmDelete(park.id);
                        }}
                      >
                        <Trash2 className="w-4 h-4" />
                      </Button>
                    </div>
                  )}

                  {park.status === 'editing' && (
                    <div className="flex justify-between w-full space-x-2">
                      <Link to={`/parks/${park.id}/publish-setup`} className="flex-1">
                        <Button size="sm" className="w-full bg-yellow-600 hover:bg-yellow-700">
                          <Edit className="w-4 h-4 mr-1" />
                          Á∑®ÈõÜ„ÇíÁ∂ö„Åë„Çã
                        </Button>
                      </Link>
                      <Button
                        size="sm"
                        variant="secondary"
                        className="text-red-600 hover:text-red-700 hover:bg-red-50"
                        onClick={(e) => {
                          e.preventDefault();
                          e.stopPropagation();
                          setShowConfirmDelete(park.id);
                        }}
                      >
                        <Trash2 className="w-4 h-4" />
                      </Button>
                    </div>
                  )}

                  {park.status === 'ready_to_publish' && (
                    <div className="flex justify-between w-full space-x-2">
                      <Link to={`/parks/${park.id}/publish-setup`} className="flex-1">
                        <Button size="sm" className="w-full bg-green-600 hover:bg-green-700">
                          <Eye className="w-4 h-4 mr-1" />
                          ÂÖ¨Èñã„Åô„Çã
                        </Button>
                      </Link>
                      <Button
                        size="sm"
                        variant="secondary"
                        className="text-red-600 hover:text-red-700 hover:bg-red-50"
                        onClick={(e) => {
                          e.preventDefault();
                          e.stopPropagation();
                          setShowConfirmDelete(park.id);
                        }}
                      >
                        <Trash2 className="w-4 h-4" />
                      </Button>
                    </div>
                  )}

                  {park.status === 'approved' && (
                    <div className="flex justify-between w-full">
                      <Link to={`/parks/${park.id}`}>
                        <Button size="sm" variant="secondary">
                          <Eye className="w-4 h-4 mr-1" />
                          ÂÖ¨Èñã„Éö„Éº„Ç∏„ÇíË¶ã„Çã
                        </Button>
                      </Link>
                      <Link to={`/parks/${park.id}/manage`}>
                        <Button size="sm">
                          ÁÆ°ÁêÜ„Åô„Çã
                        </Button>
                      </Link>
                    </div>
                  )}

                  {park.status === 'first_stage_passed' && (
                    <div className="flex justify-between w-full space-x-2">
                      <Link to={`/parks/${park.id}/second-stage`} className="flex-1">
                        <Button size="sm" className="w-full bg-blue-600 hover:bg-blue-700">
                          <Camera className="w-4 h-4 mr-1" />
                          ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ
                        </Button>
                      </Link>
                      <Button
                        size="sm"
                        variant="secondary"
                        className="text-red-600 hover:text-red-700 hover:bg-red-50"
                        onClick={(e) => {
                          e.preventDefault();
                          e.stopPropagation();
                          setShowConfirmDelete(park.id);
                        }}
                      >
                        <Trash2 className="w-4 h-4" />
                      </Button>
                    </div>
                  )}

                  {park.status === 'second_stage_waiting' && (
                    <div className="flex justify-end w-full">
                      <Button
                        size="sm"
                        variant="secondary"
                        className="text-red-600 hover:text-red-700 hover:bg-red-50"
                        onClick={(e) => {
                          e.preventDefault();
                          e.stopPropagation();
                          setShowConfirmDelete(park.id);
                        }}
                      >
                        <Trash2 className="w-4 h-4" />
                      </Button>
                    </div>
                  )}

                  {park.status === 'pending' && (
                    <div className="flex justify-between w-full space-x-2">
                      <div className="flex-1 text-center py-2 text-gray-600 text-sm">
                        Á¨¨‰∏ÄÂØ©ÊüªÂæÖ„Å°
                      </div>
                      <Button
                        size="sm"
                        variant="secondary"
                        className="text-red-600 hover:text-red-700 hover:bg-red-50"
                        onClick={(e) => {
                          e.preventDefault();
                          e.stopPropagation();
                          setShowConfirmDelete(park.id);
                        }}
                      >
                        <Trash2 className="w-4 h-4" />
                      </Button>
                    </div>
                  )}

                  {park.status === 'second_stage_review' && (
                    <div className="flex justify-between w-full space-x-2">
                      <div className="flex-1 text-center py-2 text-gray-600 text-sm">
                        Á¨¨‰∫åÂØ©Êüª‰∏≠
                      </div>
                      <Button
                        size="sm"
                        variant="secondary"
                        className="text-red-600 hover:text-red-700 hover:bg-red-50"
                        onClick={(e) => {
                          e.preventDefault();
                          e.stopPropagation();
                          setShowConfirmDelete(park.id);
                        }}
                      >
                        <Trash2 className="w-4 h-4" />
                      </Button>
                    </div>
                  )}

                  {park.status === 'rejected' && (
                    <div className="flex justify-between w-full space-x-2">
                      <div className="flex-1 text-center py-2 text-red-600 text-sm">
                        Áî≥Ë´ãÂç¥‰∏ã
                      </div>
                      <Button
                        size="sm"
                        variant="secondary"
                        className="text-red-600 hover:text-red-700 hover:bg-red-50"
                        onClick={(e) => {
                          e.preventDefault();
                          e.stopPropagation();
                          setShowConfirmDelete(park.id);
                        }}
                      >
                        <Trash2 className="w-4 h-4" />
                      </Button>
                    </div>
                  )}
                </div>
              </Card>
            );
          })}
        </div>
      )}

      {/* ÈÅãÂñ∂„Çµ„Éù„Éº„ÉàÊÉÖÂ†± */}
      <Card className="bg-gray-50">
        <div className="flex items-start space-x-3">
          <FileText className="w-6 h-6 text-gray-600 mt-1" />
          <div>
            <h3 className="font-semibold text-gray-900 mb-2">ÈÅãÂñ∂„Çµ„Éù„Éº„Éà</h3>
            <div className="text-sm text-gray-700 space-y-1">
              <p>‚Ä¢ ÂØ©Êüª„Å´Èñ¢„Åô„Çã„ÅîË≥™Âïè„ÅØÈÅãÂñ∂‰∫ãÂãôÂ±Ä„Åæ„Åß„ÅäÂïè„ÅÑÂêà„Çè„Åõ„Åè„Å†„Åï„ÅÑ</p>
              <p>‚Ä¢ QR„Ç≥„Éº„Éâ„Ç∑„Çπ„ÉÜ„É†„ÅÆË®≠ÁΩÆ„ÉªË®≠ÂÆö„Çµ„Éù„Éº„Éà„ÇíÊèê‰æõ„Åó„Å¶„ÅÑ„Åæ„Åô</p>
              <p>‚Ä¢ ÈÅãÂñ∂ÈñãÂßãÂæå„ÇÇÁ∂ôÁ∂öÁöÑ„Å™„Çµ„Éù„Éº„Éà„ÇíË°å„ÅÑ„Åæ„Åô</p>
              <p>‚Ä¢ üìß „Çµ„Éù„Éº„ÉàÁ™ìÂè£: info@dogparkjp.com</p>
            </div>
          </div>
        </div>
      </Card>

      {/* ÂâäÈô§Á¢∫Ë™ç„É¢„Éº„ÉÄ„É´ */}
      {showConfirmDelete && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg max-w-lg w-full p-6">
            {/* Ë≠¶Âëä„Ç¢„Ç§„Ç≥„É≥„Å®„Çø„Ç§„Éà„É´ */}
            <div className="flex items-center space-x-3 mb-4">
              <div className="flex-shrink-0">
                <AlertTriangle className="w-10 h-10 text-red-500" />
              </div>
              <div>
                <h3 className="text-xl font-bold text-gray-900">„Éâ„ÉÉ„Ç∞„É©„É≥Áî≥Ë´ã„ÇíÂâäÈô§</h3>
                <p className="text-sm text-gray-500">
                  {parks.find(p => p.id === showConfirmDelete)?.name}
                </p>
              </div>
            </div>

            {/* Ë≠¶Âëä„É°„ÉÉ„Çª„Éº„Ç∏ */}
            <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
              <div className="flex items-start space-x-3">
                <AlertTriangle className="w-5 h-5 text-red-600 mt-0.5 flex-shrink-0" />
                <div className="text-sm text-red-800">
                  <p className="font-semibold mb-2">‚ö†Ô∏è ÈáçË¶Å„Å™Ë≠¶Âëä</p>
                  <ul className="space-y-1 list-disc list-inside">
                    <li><strong>„Åì„ÅÆÊìç‰Ωú„ÅØÂèñ„ÇäÊ∂à„Åõ„Åæ„Åõ„Çì</strong></li>
                    <li>„Åô„Åπ„Å¶„ÅÆÁî≥Ë´ã„Éá„Éº„Çø„ÅåÂÆåÂÖ®„Å´ÂâäÈô§„Åï„Çå„Åæ„Åô</li>
                    <li>ÂÜçÂ∫¶Âà©Áî®„Åó„Åü„ÅÑÂ†¥Âêà„ÅØÊúÄÂàù„Åã„ÇâÁî≥Ë´ãÊâãÁ∂ö„Åç„ÅåÂøÖË¶Å„Åß„Åô</li>
                    <li>ÂØ©ÊüªÈÄ≤Êçó„ÇÑ„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„ÅüÁîªÂÉè„ÇÇ„Åô„Åπ„Å¶Â§±„Çè„Çå„Åæ„Åô</li>
                    <li>ÂâäÈô§Âæå„ÅØÂêå„ÅòÊñΩË®≠Âêç„Åß„ÅÆÂç≥Â∫ß„ÅÆÂÜçÁî≥Ë´ã„ÅØ„Åß„Åç„Åæ„Åõ„Çì</li>
                  </ul>
                </div>
              </div>
            </div>

            {/* ÂâäÈô§ÂÜÖÂÆπ„ÅÆË©≥Á¥∞ */}
            <div className="bg-gray-50 rounded-lg p-4 mb-6">
              <h4 className="font-semibold text-gray-900 mb-2">ÂâäÈô§„Åï„Çå„ÇãÂÜÖÂÆπÔºö</h4>
              <ul className="text-sm text-gray-700 space-y-1">
                <li>‚Ä¢ „Éâ„ÉÉ„Ç∞„É©„É≥„ÅÆÂü∫Êú¨ÊÉÖÂ†±</li>
                <li>‚Ä¢ „Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÊ∏à„Åø„ÅÆÊñΩË®≠ÁîªÂÉè</li>
                <li>‚Ä¢ ÂØ©ÊüªÈÄ≤ÊçóÁä∂Ê≥Å</li>
                <li>‚Ä¢ ÈäÄË°åÂè£Â∫ßÊÉÖÂ†±</li>
                <li>‚Ä¢ ÁÆ°ÁêÜËÄÖ„Åã„Çâ„ÅÆ„Éï„Ç£„Éº„Éâ„Éê„ÉÉ„ÇØ</li>
              </ul>
            </div>

            {/* Á¢∫Ë™ç„ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ */}
            <div className="mb-6">
              <label className="flex items-start space-x-3 cursor-pointer">
                <input
                  type="checkbox"
                  checked={confirmDelete}
                  className="mt-1 rounded border-gray-300 text-red-600 focus:ring-red-500"
                  onChange={(e) => {
                    console.log('‚úÖ Checkbox changed to:', e.target.checked);
                    setConfirmDelete(e.target.checked);
                  }}
                />
                <span className="text-sm text-gray-700">
                  ‰∏äË®ò„ÅÆÂÜÖÂÆπ„ÇíÁêÜËß£„Åó„ÄÅ<strong>Áî≥Ë´ã„ÇíÂÆåÂÖ®„Å´ÂâäÈô§„Åô„Çã„Åì„Å®„Å´ÂêåÊÑè„Åó„Åæ„Åô</strong>
                </span>
              </label>
            </div>

            {/* „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ */}
            <div className="flex justify-end space-x-3">
              <Button
                variant="secondary"
                onClick={() => {
                  setShowConfirmDelete(null);
                  setConfirmDelete(false);
                }}
                disabled={isDeleting}
              >
                „Ç≠„É£„É≥„Çª„É´
              </Button>
              <Button
                id="confirm-delete-button"
                className="bg-red-600 hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed"
                isLoading={isDeleting}
                disabled={!confirmDelete}
                onClick={() => {
                  console.log('üö® Delete button clicked!', {
                    parkId: showConfirmDelete,
                    confirmDelete,
                    isDeleting
                  });
                  if (showConfirmDelete) {
                    handleDeletePark(showConfirmDelete);
                  }
                }}
              >
                <Trash2 className="w-4 h-4 mr-2" />
                ÂÆåÂÖ®„Å´ÂâäÈô§„Åô„Çã
              </Button>
            </div>

            {/* ‰ª£ÊõøÊ°à„ÅÆÊèêÊ°à */}
            <div className="mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg">
              <p className="text-sm text-blue-800">
                <strong>üí° „Éí„É≥„ÉàÔºö</strong> ‰∏ÄÊôÇÁöÑ„Å´Áî≥Ë´ã„Çí‰∏≠Êñ≠„Åó„Åü„ÅÑÂ†¥Âêà„ÅØ„ÄÅÂâäÈô§„Åõ„Åö„Å´ÈÅãÂñ∂‰∫ãÂãôÂ±Ä„Å´„ÅîÁõ∏Ë´á„Åè„Å†„Åï„ÅÑ„ÄÇ
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

// Calendar component for the dashboard
function Calendar({ className }: { className?: string }) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      className={className}
    >
      <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
      <line x1="16" y1="2" x2="16" y2="6"></line>
      <line x1="8" y1="2" x2="8" y2="6"></line>
      <line x1="3" y1="10" x2="21" y2="10"></line>
    </svg>
  );
}