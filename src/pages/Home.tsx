import { useState, useEffect, useCallback, useMemo } from 'react';
import { HeroSection } from '../components/home/HeroSection';
import { NetworkErrorBanner } from '../components/home/NetworkErrorBanner';
import { MarqueeDogsSection } from '../components/home/MarqueeDogsSection';
import { NewsSection } from '../components/home/NewsSection';
import { OwnerRecruitmentBanner } from '../components/home/OwnerRecruitmentBanner';
import { FeaturesSection } from '../components/home/FeaturesSection';
import { UsageRulesSection } from '../components/home/UsageRulesSection';
import useAuth from '../context/AuthContext';
import { supabase } from '../utils/supabase';
import { testSupabaseConnection } from '../utils/supabase';
import type { Dog } from '../types';
import SkipNavigation from '../components/accessibility/SkipNavigation';
import AnimatedElement, { FadeIn, SlideUp } from '../components/accessibility/AnimatedElement';
import { useResponsive } from '../hooks/useResponsive';

export function Home() {
  const { user } = useAuth();
  const [recentDogs, setRecentDogs] = useState<Dog[]>([]);
  const [news, setNews] = useState<any[]>([]);
  const [isOffline, setIsOffline] = useState(false);
  const [networkError, setNetworkError] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [isNewsLoading, setIsNewsLoading] = useState(true); // Êñ∞ÁùÄÊÉÖÂ†±Â∞ÇÁî®„ÅÆ„É≠„Éº„Éá„Ç£„É≥„Ç∞Áä∂ÊÖã
  
  // „É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éï„ÉÉ„ÇØ
  const { isMobile, isTablet, prefersReducedMotion } = useResponsive();

  // „Çπ„Ç≠„ÉÉ„Éó„É™„É≥„ÇØ„Çí„É°„É¢Âåñ
  const skipLinks = useMemo(() => [
    { href: '#main-content', label: '„É°„Ç§„É≥„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å´„Çπ„Ç≠„ÉÉ„Éó' },
    { href: '#hero-section', label: '„Éí„Éº„É≠„Éº„Çª„ÇØ„Ç∑„Éß„É≥„Å´„Çπ„Ç≠„ÉÉ„Éó' },
    { href: '#features-section', label: 'Ê©üËÉΩÁ¥π‰ªã„Å´„Çπ„Ç≠„ÉÉ„Éó' },
    { href: '#news-section', label: 'Êñ∞ÁùÄÊÉÖÂ†±„Å´„Çπ„Ç≠„ÉÉ„Éó' },
    { href: '#usage-rules', label: 'Âà©Áî®ÊñπÊ≥ï„ÉªÊñôÈáë„Å´„Çπ„Ç≠„ÉÉ„Éó' },
  ], []);

  // „Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÁä∂ÊÖã„ÅÆÁõ£Ë¶ñ
  useEffect(() => {
    const handleOnline = () => {
      setIsOffline(false);
      setNetworkError(null);
    };

    const handleOffline = () => {
      setIsOffline(true);
      setNetworkError('„Ç§„É≥„Çø„Éº„Éç„ÉÉ„ÉàÊé•Á∂ö„ÅåÂàáÊñ≠„Åï„Çå„Åæ„Åó„Åü„ÄÇ\n„Ç™„Éï„É©„Ç§„É≥„É¢„Éº„Éâ„ÅßË°®Á§∫„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ');
    };

    window.addEventListener('online', handleOnline);
    window.addEventListener('offline', handleOffline);

    // ÂàùÊúüÁä∂ÊÖã„ÅÆÁ¢∫Ë™ç
    if (!navigator.onLine) {
      handleOffline();
    }

    return () => {
      window.removeEventListener('online', handleOnline);
      window.removeEventListener('offline', handleOffline);
    };
  }, []);

  // „Ç≠„É£„ÉÉ„Ç∑„É•Èñ¢Êï∞ (5ÂàÜÈñì„Ç≠„É£„ÉÉ„Ç∑„É•)
  const cacheTimeout = 5 * 60 * 1000; // 5ÂàÜ
  const cache = useMemo(() => new Map<string, { data: any; timestamp: number }>(), []);
  
  const getCachedData = useCallback((key: string) => {
    const cached = cache.get(key);
    if (cached && Date.now() - cached.timestamp < cacheTimeout) {
      return cached.data;
    }
    return null;
  }, [cache, cacheTimeout]);
  
  const setCachedData = useCallback((key: string, data: any) => {
    cache.set(key, { data, timestamp: Date.now() });
  }, [cache]);

  const fetchRecentDogs = useCallback(async () => {
    try {
      console.log('üêï ÊúÄËøë‰ª≤ÈñìÂÖ•„Çä„Åó„Åü„ÉØ„É≥„Å°„ÇÉ„Çì„ÇíÂèñÂæó‰∏≠...');
      
      // „Ç≠„É£„ÉÉ„Ç∑„É•„Åã„ÇâÂèñÂæó„ÇíË©¶Ë°å
      const cachedData = getCachedData('recentDogs');
      if (cachedData) {
        console.log('‚úÖ „Ç≠„É£„ÉÉ„Ç∑„É•„Åã„ÇâÊúÄËøë‰ª≤ÈñìÂÖ•„Çä„Åó„Åü„ÉØ„É≥„Å°„ÇÉ„Çì„ÇíÂèñÂæó:', cachedData.length, 'Âåπ');
        setRecentDogs(cachedData);
        return cachedData;
      }
      
      setIsLoading(true);
      setNetworkError(null);

      const connectionTest = await testSupabaseConnection();
      if (!connectionTest) {
        throw new Error('„Éá„Éº„Çø„Éô„Éº„ÇπÊé•Á∂ö„Å´Â§±Êïó„Åó„Åæ„Åó„Åü');
      }

      // ÂøÖË¶Å„Å™„Éï„Ç£„Éº„É´„Éâ„ÅÆ„Åø„ÇíÂèñÂæó„Åó„Å¶„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÇíÂêë‰∏ä
      const { data, error } = await supabase
        .from('dogs')
        .select('id, owner_id, name, breed, birth_date, gender, image_url, created_at')
        .order('created_at', { ascending: false })
        .limit(10);
      
      if (error) throw error;
      
      console.log('‚úÖ ÊúÄËøë‰ª≤ÈñìÂÖ•„Çä„Åó„Åü„ÉØ„É≥„Å°„ÇÉ„ÇìÂèñÂæóÊàêÂäü:', data?.length || 0, 'Âåπ');
      const dogs = data || [];
      setRecentDogs(dogs);
      setCachedData('recentDogs', dogs);
      return dogs;
    } catch (err) {
      console.warn('‚ùå Error fetching recent dogs:', err);
      const errorMessage = err instanceof Error ? err.message : 'Êé•Á∂ö„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü';
      
      if (errorMessage.includes('NetworkError') || errorMessage.includes('Failed to fetch')) {
        setNetworkError('„Çµ„Éº„Éê„Éº„Å®„ÅÆÊé•Á∂ö„Å´ÂïèÈ°å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ\n„Åó„Å∞„Çâ„ÅèÂæÖ„Å£„Å¶„Åã„ÇâÂÜçÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ');
      } else {
        setNetworkError(`„Éá„Éº„Çø„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ\n„Ç®„É©„ÉºË©≥Á¥∞: ${errorMessage}`);
      }
      return [];
    } finally {
      setIsLoading(false);
      console.log('üêï ÊúÄËøë‰ª≤ÈñìÂÖ•„Çä„Åó„Åü„ÉØ„É≥„Å°„ÇÉ„ÇìÂèñÂæóÂá¶ÁêÜÂÆå‰∫Ü');
    }
  }, [getCachedData, setCachedData]);

  const fetchNews = useCallback(async () => {
    try {
      console.log('üì∞ Êñ∞ÁùÄÊÉÖÂ†±„ÇíÂèñÂæó‰∏≠...');
      
      // „Ç≠„É£„ÉÉ„Ç∑„É•„Åã„ÇâÂèñÂæó„ÇíË©¶Ë°å
      const cachedData = getCachedData('news');
      if (cachedData) {
        console.log('‚úÖ „Ç≠„É£„ÉÉ„Ç∑„É•„Åã„ÇâÊñ∞ÁùÄÊÉÖÂ†±„ÇíÂèñÂæó:', cachedData.length, '‰ª∂');
        setNews(cachedData);
        return cachedData;
      }
      
      setIsNewsLoading(true);
      
      const { data, error } = await supabase
        .from('news_announcements')
        .select('*')
        .order('created_at', { ascending: false })
        .limit(5);

      if (error) {
        console.error('‚ùå Êñ∞ÁùÄÊÉÖÂ†±ÂèñÂæó„Ç®„É©„Éº:', error);
        // „Ç®„É©„Éº„Åå„ÅÇ„Å£„Å¶„ÇÇÁ©∫ÈÖçÂàó„ÇíË®≠ÂÆö„Åó„Å¶Âá¶ÁêÜ„ÇíÁ∂öË°å
        setNews([]);
        return [];
      }

      console.log('‚úÖ Êñ∞ÁùÄÊÉÖÂ†±ÂèñÂæóÊàêÂäü:', data?.length || 0, '‰ª∂');
      const newsData = data || [];
      setNews(newsData);
      setCachedData('news', newsData);
      return newsData;
    } catch (err) {
      console.error('‚ùå Êñ∞ÁùÄÊÉÖÂ†±ÂèñÂæó‰æãÂ§ñ:', err);
      // „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Å¶„ÇÇÁ©∫ÈÖçÂàó„ÇíË®≠ÂÆö
      setNews([]);
      return [];
    } finally {
      setIsNewsLoading(false);
      console.log('üì∞ Êñ∞ÁùÄÊÉÖÂ†±ÂèñÂæóÂá¶ÁêÜÂÆå‰∫Ü');
    }
  }, [getCachedData, setCachedData]);

  // ‰∏¶Âàó„Åß„Éá„Éº„ÇøÂèñÂæó„ÇíÂÆüË°å
  const fetchAllData = useCallback(async () => {
    console.log('üöÄ „Éá„Éº„ÇøÂèñÂæó„Çí‰∏¶Âàó„ÅßÈñãÂßã...');
    const startTime = Date.now();
    
    try {
      // ‰∏¶Âàó„Åß„Éá„Éº„ÇøÂèñÂæó„ÇíÂÆüË°å
      const [dogs, news] = await Promise.all([
        fetchRecentDogs(),
        fetchNews()
      ]);
      
      const endTime = Date.now();
      console.log(`‚úÖ ‰∏¶Âàó„Éá„Éº„ÇøÂèñÂæóÂÆå‰∫Ü: ${endTime - startTime}ms`);
      
      return { dogs, news };
    } catch (error) {
      console.error('‚ùå ‰∏¶Âàó„Éá„Éº„ÇøÂèñÂæó„Ç®„É©„Éº:', error);
      return { dogs: [], news: [] };
    }
  }, [fetchRecentDogs, fetchNews]);

  useEffect(() => {
    void fetchAllData();
  }, [fetchAllData]);

  const handleRetryConnection = useCallback(async () => {
    // „Ç≠„É£„ÉÉ„Ç∑„É•„Çí„ÇØ„É™„Ç¢„Åó„Å¶ÂÜçÂèñÂæó
    cache.clear();
    await fetchAllData();
  }, [fetchAllData, cache]);

  // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Ë®≠ÂÆö„Çí„É¨„Çπ„Éù„É≥„Ç∑„Éñ„Å´Ë™øÊï¥ (ÈÅÖÂª∂„ÇíÂâäÊ∏õ)
  const animationDuration = isMobile ? 'fast' : 'normal';
  const staggerDelay = prefersReducedMotion ? 0 : 25; // 100„Åã„Çâ25„Å´ÂâäÊ∏õ

  // isLoggedIn„Çí„É°„É¢Âåñ
  const isLoggedIn = useMemo(() => !!user, [user]);

  return (
    <>
      <SkipNavigation links={skipLinks} />
      
      <div className="min-h-screen bg-gray-50" role="main">
        {/* „Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç®„É©„Éº„Éê„Éä„Éº */}
        <FadeIn duration="fast">
          <NetworkErrorBanner
            isOffline={isOffline}
            networkError={networkError}
            onRetryConnection={handleRetryConnection}
          />
        </FadeIn>

        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          {/* „Éí„Éº„É≠„Éº„Çª„ÇØ„Ç∑„Éß„É≥ */}
          <section 
            id="hero-section" 
            aria-label="„É°„Ç§„É≥„Éí„Éº„É≠„Éº"
            className="focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 rounded-lg"
            tabIndex={-1}
          >
            <SlideUp duration={animationDuration} delay={staggerDelay * 0}>
              <HeroSection isLoggedIn={isLoggedIn} />
            </SlideUp>
          </section>

          {/* ÊúÄËøëÁôªÈå≤„Åï„Çå„ÅüÁä¨„ÅÆ„Éû„Éº„Ç≠„Éº */}
          <section 
            aria-label="ÊúÄËøëÁôªÈå≤„Åï„Çå„ÅüÊÑõÁä¨„Åü„Å°"
            className="focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 rounded-lg"
            tabIndex={-1}
          >
            <AnimatedElement
              animation="slideUp"
              duration={animationDuration}
              delay={staggerDelay * 1}
              respectReducedMotion={true}
              fallbackAnimation="fadeIn"
            >
              <MarqueeDogsSection 
                recentDogs={recentDogs} 
                isOffline={isOffline}
                isLoading={isLoading}
              />
            </AnimatedElement>
          </section>

          <main id="main-content" className="space-y-12 py-8">
            {/* Ê©üËÉΩÁ¥π‰ªã„Çª„ÇØ„Ç∑„Éß„É≥ */}
            <section 
              id="features-section"
              aria-labelledby="features-heading"
              className="focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 rounded-lg"
              tabIndex={-1}
            >
              <AnimatedElement
                animation="slideUp"
                duration={animationDuration}
                delay={staggerDelay * 2}
                respectReducedMotion={true}
                fallbackAnimation="fadeIn"
              >
                <h2 
                  id="features-heading" 
                  className="sr-only"
                >
                  „Ç¢„Éó„É™„ÅÆ‰∏ª„Å™Ê©üËÉΩ
                </h2>
                <FeaturesSection isLoggedIn={isLoggedIn} />
              </AnimatedElement>
            </section>

            {/* Êñ∞ÁùÄÊÉÖÂ†±„Çª„ÇØ„Ç∑„Éß„É≥ */}
            <section 
              id="news-section"
              aria-labelledby="news-heading"
              className="focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 rounded-lg"
              tabIndex={-1}
            >
              <AnimatedElement
                animation="slideUp"
                duration={animationDuration}
                delay={staggerDelay * 3}
                respectReducedMotion={true}
                fallbackAnimation="fadeIn"
              >
                <h2 
                  id="news-heading" 
                  className="sr-only"
                >
                  Êñ∞ÁùÄÊÉÖÂ†±„Å®„ÅäÁü•„Çâ„Åõ
                </h2>
                <NewsSection 
                  isOffline={isOffline}
                  onRetryConnection={handleRetryConnection}
                  news={news}
                  isLoading={isNewsLoading}
                />
              </AnimatedElement>
            </section>

            {/* „Ç™„Éº„Éä„ÉºÂãüÈõÜ„Éê„Éä„Éº */}
            <AnimatedElement
              animation="slideUp"
              duration={animationDuration}
              delay={staggerDelay * 4}
              respectReducedMotion={true}
              fallbackAnimation="fadeIn"
            >
              <OwnerRecruitmentBanner />
            </AnimatedElement>

            {/* Âà©Áî®ÊñπÊ≥ï„ÉªÊñôÈáë„Çª„ÇØ„Ç∑„Éß„É≥ */}
            <section 
              id="usage-rules"
              aria-labelledby="usage-heading"
              className="focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 rounded-lg"
              tabIndex={-1}
            >
              <AnimatedElement
                animation="slideUp"
                duration={animationDuration}
                delay={staggerDelay * 5}
                respectReducedMotion={true}
                fallbackAnimation="fadeIn"
              >
                <h2 
                  id="usage-heading" 
                  className="sr-only"
                >
                  Âà©Áî®ÊñπÊ≥ï„Å®ÊñôÈáë„Å´„Å§„ÅÑ„Å¶
                </h2>
                <UsageRulesSection />
              </AnimatedElement>
            </section>
          </main>
        </div>
      </div>

      {/* „É©„Ç§„Éñ„É™„Éº„Ç∏„Éß„É≥Ôºà„Çπ„ÇØ„É™„Éº„É≥„É™„Éº„ÉÄ„ÉºÁî®Ôºâ */}
      <div 
        aria-live="polite" 
        aria-atomic="true" 
        className="sr-only"
        id="status-region"
      >
        {isOffline && '„Ç™„Éï„É©„Ç§„É≥„É¢„Éº„Éâ„Åß„Åô„ÄÇ'}
        {networkError && '„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ'}
        {isLoading && '„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Çì„Åß„ÅÑ„Åæ„Åô„ÄÇ'}
      </div>

      {/* „Ç¢„Éä„Ç¶„É≥„Çπ„É™„Éº„Ç∏„Éß„É≥ÔºàÈáçË¶Å„Å™ÈÄöÁü•Áî®Ôºâ */}
      <div 
        aria-live="assertive" 
        aria-atomic="true" 
        className="sr-only"
        id="announcement-region"
      >
      </div>
    </>
  );
}