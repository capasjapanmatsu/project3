workflows:
  ios-release:
    name: iOS App Store Release

    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.dogparkjp.app
      vars:
        XCODE_SCHEME: App
        DEVELOPMENT_TEAM: $DEVELOPMENT_TEAM
        PROVISIONING_PROFILE_SPECIFIER: dogparkjp_app_store_v2
        APP_STORE_CONNECT_ISSUER_ID: $APP_STORE_CONNECT_ISSUER_ID
        APP_STORE_CONNECT_KEY_IDENTIFIER: $APP_STORE_CONNECT_KEY_ID
        APP_STORE_CONNECT_PRIVATE_KEY: $APP_STORE_CONNECT_PRIVATE_KEY

    scripts:
      - name: Install node deps
        script: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Ensure Capacitor iOS platform exists & sync
        script: |
          set -e
          if grep -q '"@capacitor/core"' package.json 2>/dev/null; then
            npx cap sync
            if [ ! -d ios ]; then
              npx cap add ios
              npx cap sync ios
            else
              npx cap sync ios
            fi
          else
            echo "Capacitor not detected; skipping cap sync."
          fi

      - name: Install CocoaPods when Podfile exists
        script: |
          if [ -f "ios/Podfile" ]; then
            cd ios
            pod repo update --silent || true
            pod install --silent
            cd "$CM_BUILD_DIR"
          elif [ -f "ios/App/Podfile" ]; then
            cd ios/App
            pod repo update --silent || true
            pod install --silent
            cd "$CM_BUILD_DIR"
          else
            echo "No Podfile found; skipping pod install."
          fi

      - name: Sync iOS signing (profiles & certs)
        script: |
          xcode-project use-profiles

      - name: Bump build number
        script: |
          BUILD_NO=${CM_BUILD_NUMBER:-1}
          agvtool new-version -all $BUILD_NO || true
          echo "CFBundleVersion -> $BUILD_NO"

      - name: Build archive & IPA (auto-detect workspace/project)
        script: |
          set -euo pipefail

          echo "Search for Xcode workspaces/projectsâ€¦"
          WORKSPACE=$(find . -maxdepth 4 -type f -name "*.xcworkspace" | head -n1 || true)
          PROJECT=$(find . -maxdepth 4 -type d -name "*.xcodeproj" | head -n1 || true)

          if [ -n "$WORKSPACE" ]; then
            echo "Using workspace: $WORKSPACE"
            BUILD_FLAG="--workspace $WORKSPACE"
          elif [ -n "$PROJECT" ]; then
            echo "Using project: $PROJECT"
            BUILD_FLAG="--project $PROJECT"
          else
            echo "No .xcworkspace or .xcodeproj found in repo."
            find . -maxdepth 4 -type d -name "ios" -print
            exit 1
          fi

          xcode-project build-ipa \
            $BUILD_FLAG \
            --scheme "$XCODE_SCHEME" \
            --archive-flags="-destination 'generic/platform=iOS'" \
            DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
            PROVISIONING_PROFILE_SPECIFIER="$PROVISIONING_PROFILE_SPECIFIER" \
            CODE_SIGN_STYLE=Manual

      - name: Upload to App Store Connect (verbose)
        script: |
          set -e
          IPA=$(ls -1 build/ios/ipa/*.ipa 2>/dev/null || true)
          if [ -z "$IPA" ]; then
            echo "IPA not found under build/ios/ipa"
            find build -maxdepth 3 -type f | sed 's/^/FOUND: /'
            exit 1
          fi
          echo "Uploading: $IPA"
          app-store-connect publish \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --path "$IPA" \
            --verbose

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/*.xcarchive
      - $HOME/Library/Logs/gym/*.log

    publishing:
      email:
        recipients:
          - your-email@example.com
        notify:
          success: true
          failure: true
