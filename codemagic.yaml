workflows:
  ios-release:
    name: iOS Release (DogPark JP)
    instance_type: mac_mini_m2
    max_build_duration: 60

    environment:
      xcode: 15.4
      node: 20.11.1
      cocoapods: default
      vars:
        BUNDLE_ID: com.dogparkjp.app
        APPLE_TEAM_ID: 9HT7A6UF4K
        IOS_SCHEME: App
      groups:
        - supabase
        - codesign

    integrations:
      app_store_connect: "DogParkJP API Key"

    cache:
      cache_paths:
        - ~/.npm
        - ~/Library/Caches/CocoaPods
        - ios/App/Pods

    scripts:
      - name: Install JS deps & build web
        script: |
          set -e
          if [ -f package-lock.json ]; then
            npm ci --legacy-peer-deps
          else
            npm install --legacy-peer-deps
          fi
          npm run build || npx vite build

      - name: Ensure Capacitor iOS platform & sync
        script: |
          set -e
          npx cap add ios || true
          npx cap sync ios

      - name: CocoaPods install
        script: |
          set -e
          cd ios/App
          pod repo update || true
          pod install
          cd -

      - name: Fetch signing files & configure keychain
        script: |
          set -e
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          keychain initialize
          keychain add-certificates
          xcode-project use-profiles

      - name: Build & Export with xcodebuild (App Store)
        script: |
          set -euo pipefail

          EXPORT_PLIST="$CM_BUILD_DIR/export_options.plist"
          cat > "$EXPORT_PLIST" <<'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>teamID</key><string>9HT7A6UF4K</string>
            <key>signingStyle</key><string>manual</string>
            <key>uploadSymbols</key><true/>
          </dict>
          </plist>
          EOF
          echo "Export options: $EXPORT_PLIST"

          ARCHIVE_PATH="$CM_BUILD_DIR/App.xcarchive"
          IPA_DIR="build/ios/ipa"
          mkdir -p "$IPA_DIR"

          echo "== Clean =="
          xcodebuild \
            -workspace ios/App/App.xcworkspace \
            -scheme "$IOS_SCHEME" \
            -configuration Release \
            clean | tee "$CM_BUILD_DIR/clean.log"

          echo "== Archive =="
          set +e
          xcodebuild \
            -workspace ios/App/App.xcworkspace \
            -scheme "$IOS_SCHEME" \
            -configuration Release \
            -archivePath "$ARCHIVE_PATH" \
            CURRENT_PROJECT_VERSION="$BUILD_NUMBER" \
            DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
            archive | tee "$CM_BUILD_DIR/archive.log"
          status=${PIPESTATUS[0]}
          set -e
          if [ $status -ne 0 ]; then
            echo "---- tail archive.log (last 200 lines) ----"
            tail -n 200 "$CM_BUILD_DIR/archive.log"
            exit $status
          fi

          echo "== Export =="
          set +e
          xcodebuild \
            -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportPath "$IPA_DIR" \
            -exportOptionsPlist "$EXPORT_PLIST" | tee "$CM_BUILD_DIR/export.log"
          status=${PIPESTATUS[0]}
          set -e
          if [ $status -ne 0 ]; then
            echo "---- tail export.log (last 200 lines) ----"
            tail -n 200 "$CM_BUILD_DIR/export.log"
            exit $status
          fi

          echo "IPA output: $IPA_DIR"

    artifacts:
      - build/ios/ipa/*.ipa
      - ~/Library/Developer/Xcode/Archives/**/*

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
