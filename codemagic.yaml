workflows:
  ios-release:
    name: iOS App Store (Capacitor/Ionic)
    max_build_duration: 60
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: "DogParkJP API Key"
    environment:
      xcode: latest
      cocoapods: default
      node: 20
      vars:
        BUNDLE_ID: com.dogparkjp.app
        APP_NAME: DogPark Japan
        DEVELOPMENT_TEAM: 9HT7A6UF4K
      groups:
        - supabase
        - codesign   # ← CM_CERTIFICATE / CM_CERTIFICATE_PASSWORDS を読む
    cache:
      cache_paths:
        - $HOME/Library/Caches/CocoaPods
        - ios/App/Pods
        - ~/.npm

    scripts:
      - name: Show versions
        script: |
          echo "Node: $(node -v)"
          echo "NPM:  $(npm -v)"

      - name: Install dependencies
        script: |
          npm ci --legacy-peer-deps

      - name: Build web assets (Vite)
        script: |
          npm run build

      - name: Ensure iOS platform exists
        script: |
          if [ ! -d "ios" ]; then
            npx cap add ios
          fi

      - name: Sync Capacitor iOS
        script: |
          npx cap sync ios

      - name: Install CocoaPods
        script: |
          cd ios/App
          pod repo update
          pod install

      # ---- Signing (direct-embed: CM_CERTIFICATE / CM_CERTIFICATE_PASSWORDS) ----
      - name: Configure signing (direct embed)
        script: |
          set -e
          # 1) Keychain 初期化
          keychain initialize
          # 2) 直埋めの p12 を取り込み（CM_CERTIFICATE / CM_CERTIFICATE_PASSWORDS を使用）
          keychain add-certificates
          # 3) 必要ならプロファイルを取得（app store）
          app-store-connect fetch-profiles --type IOS_APP_STORE --bundle-id "$BUNDLE_ID" --create
          # 4) 取得したプロファイルを Xcode へ適用（ターゲット App に差し込み）
          xcode-project use-profiles

      - name: Debug certificates / profiles
        script: |
          echo "CM_CERTIFICATE (set?): $([ -n "$CM_CERTIFICATE" ] && echo YES || echo NO)"
          echo "CM_CERTIFICATE_PASSWORDS (set?): $([ -n "$CM_CERTIFICATE_PASSWORDS" ] && echo YES || echo NO)"
          echo "Listing imported certificates:"
          keychain list-certificates || true
          echo "Local certificate files:"
          ls -la "$HOME/Library/MobileDevice/Certificates" || true
          echo "Local provisioning profiles:"
          ls -la "$HOME/Library/MobileDevice/Provisioning Profiles" || true

      - name: Show signing settings (debug)
        script: |
          xcode-project show-build-settings --workspace "ios/App/App.xcworkspace" --scheme "App" | \
          grep -E "PRODUCT_BUNDLE_IDENTIFIER|DEVELOPMENT_TEAM|CODE_SIGN_STYLE|PROVISIONING_PROFILE_SPECIFIER|PROVISIONING_PROFILE" || true

      - name: Build IPA with Xcode
        script: |
          # プロジェクト側の設定（use-profiles適用後）に任せてアーカイブ
          xcode-project build-ipa \
            --workspace "ios/App/App.xcworkspace" \
            --scheme "App" \
            --archive-flags="-destination 'generic/platform=iOS'"

      - name: Show effective build settings (provisioning)
        script: |
          set -o pipefail
          xcodebuild -workspace ios/App/App.xcworkspace -scheme App -showBuildSettings | \
          grep -E "PRODUCT_BUNDLE_IDENTIFIER|DEVELOPMENT_TEAM|CODE_SIGN_STYLE|PROVISIONING_PROFILE_SPECIFIER|PROVISIONING_PROFILE" || true

    artifacts:
      - build/ios/ipa/*.ipa
      - $HOME/Library/Logs/gym/*.log
      - $CM_BUILD_DIR/ios/App/build/**/*.log

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
